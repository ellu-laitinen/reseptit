[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js":"17","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js":"18","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\__AddRecipe.js":"19","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\config.js":"20","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Pagination.js":"21","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\RemoveModal.js":"22"},{"size":277,"mtime":1617650206621,"results":"23","hashOfConfig":"24"},{"size":1249,"mtime":1628413473427,"results":"25","hashOfConfig":"24"},{"size":852,"mtime":1627745853154,"results":"26","hashOfConfig":"24"},{"size":2372,"mtime":1628320652439,"results":"27","hashOfConfig":"24"},{"size":3146,"mtime":1627818688807,"results":"28","hashOfConfig":"24"},{"size":2987,"mtime":1627818684916,"results":"29","hashOfConfig":"24"},{"size":3190,"mtime":1627818678610,"results":"30","hashOfConfig":"24"},{"size":924,"mtime":1628320591435,"results":"31","hashOfConfig":"24"},{"size":3900,"mtime":1627818675797,"results":"32","hashOfConfig":"24"},{"size":2473,"mtime":1627745849748,"results":"33","hashOfConfig":"24"},{"size":3937,"mtime":1627745849939,"results":"34","hashOfConfig":"24"},{"size":3843,"mtime":1628413823116,"results":"35","hashOfConfig":"24"},{"size":1334,"mtime":1628414010910,"results":"36","hashOfConfig":"24"},{"size":7846,"mtime":1627820028351,"results":"37","hashOfConfig":"24"},{"size":7041,"mtime":1628415645625,"results":"38","hashOfConfig":"24"},{"size":3037,"mtime":1628414178182,"results":"39","hashOfConfig":"24"},{"size":4109,"mtime":1627818355985,"results":"40","hashOfConfig":"24"},{"size":3823,"mtime":1628415606955,"results":"41","hashOfConfig":"24"},{"size":3028,"mtime":1627749137341,"results":"42","hashOfConfig":"24"},{"size":92,"mtime":1627814659450,"results":"43","hashOfConfig":"24"},{"size":848,"mtime":1627816066276,"results":"44","hashOfConfig":"24"},{"size":1546,"mtime":1628410266429,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"15ilex8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["96","97"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["98"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["99"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport { deleteLunch as deleteLunchMutation } from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n  console.log(match);\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, [nextToken]);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({\r\n      query: listLunchs,\r\n      variables: { nextToken, limit: 10 },\r\n    });\r\n    setNewNextToken(apiData.data.listLunchs.nextToken);\r\n    const lunchFromAPI = apiData.data.listLunchs.items;\r\n    console.log(apiData.data.listLunchs.items);\r\n    await Promise.all(\r\n      lunchFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setLunch(lunchFromAPI);\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    const newLunchArray = lunch.filter((recipe) => recipe.id !== id);\r\n    setLunch(newLunchArray);\r\n    await API.graphql({\r\n      query: deleteLunchMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Lounaat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteLunch(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["100"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listDinners } from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { deleteDinner as deleteDinnerMutation } from \"../../graphql/mutations\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchDinners() {\r\n      const apiData = await API.graphql({\r\n        query: listDinners,\r\n        variables: { nextToken, limit: 10 },\r\n      });\r\n      setNewNextToken(apiData.data.listDinners.nextToken);\r\n      const dinnerFromAPI = apiData.data.listDinners.items;\r\n      await Promise.all(\r\n        dinnerFromAPI.map(async (recipe) => {\r\n          if (recipe.image) {\r\n            const image = await Storage.get(recipe.image);\r\n            recipe.image = image;\r\n            //      console.log(recipe.image);\r\n          }\r\n        })\r\n      );\r\n      setDinner(dinnerFromAPI);\r\n      //  console.log(breakfastFromAPI);\r\n    }\r\n    fetchDinners();\r\n  }, [nextToken]);\r\n  // DELETE dinner\r\n  console.log(dinner);\r\n  async function deleteDinner({ id }) {\r\n    const newDinnerArray = dinner.filter((recipe) => recipe.id !== id);\r\n    setDinner(newDinnerArray);\r\n    await API.graphql({\r\n      query: deleteDinnerMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Päiväruuat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {dinner.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteDinner(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {/*     <Grid item xs={12}>\r\n                <AddRecipe category={\"päiväruoca\"} />\r\n              </Grid> */}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js",["101"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { green, deepPurple, purple } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: \"light\",\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n});\r\n\r\ntheme.overrides = {\r\n  muiButton: {\r\n    outlined: {\r\n      backgroundColor: \"green\",\r\n      color: \"black\",\r\n    },\r\n\r\n    colorSecondary: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  MuiCard: {\r\n    root: {\r\n      backgroundColor: purple[100],\r\n      margin: \"1rem\",\r\n      padding: \"1rem\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  MuiTextField: {\r\n    root: {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n  MuiAppBar: {\r\n    root: {\r\n      backgroundColor: green[100],\r\n      marginBottom: \"2rem\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  MuiTypography: {\r\n    h5: {\r\n      marginLeft: \"2rem\",\r\n    },\r\n    h4: {\r\n      padding: \"1rem\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js",["102"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js",["103","104","105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  createBreakfast as createBreakfastMutation,\r\n  createDinner as createDinnerMutation,\r\n  createLunch as createLunchMutation,\r\n  createSnack as createSnackMutation,\r\n} from \"../../graphql/mutations\";\r\nimport AddRecipeCard from \"./AddRecipeCard\";\r\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\r\n/* import { username, password } from \"./config\"; */\r\n\r\nconst AddRecipe = ({ category }) => {\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [credentials, setCredentials] = useState(null);\r\n\r\n  const [recipe, setRecipe] = useState([]);\r\n  const [ingredients, setIngredients] = useState(\"\");\r\n\r\n  const [recipeCreator, setRecipeCreator] = useState(null);\r\n  console.log(\"ADD RECIPE\");\r\n\r\n  // FORM\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: ingredients,\r\n    instructions: \"\",\r\n  };\r\n\r\n  const [recipeData, setRecipeData] = useState(initialState);\r\n  console.log(recipeData);\r\n\r\n  const saveData = ({ name, value }) => {\r\n    setRecipeData({\r\n      ...recipeData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  console.log(recipeData);\r\n\r\n  //add ingredients\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const addIng = (e) => {\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...recipeData.ingredients, ingredients.ingredients],\r\n    });\r\n    setIngredients({ value: \"\" });\r\n  };\r\n\r\n  // add image\r\n  async function onChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    const file = e.target.files[0];\r\n    setRecipeData({\r\n      ...recipeData,\r\n      image: file.name,\r\n    });\r\n    setImgFile(URL.createObjectURL(e.target.files[0]));\r\n    await Storage.put(file.name, file);\r\n    /*     fetchRecipes(); */\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setRecipeData({\r\n      ...recipeData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const removeIng = (id) => {\r\n    console.log(\"remove ing\");\r\n    console.log(id);\r\n    const newIngArray = recipeData.ingredients.filter((item) => item !== id);\r\n    console.log(newIngArray);\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngArray],\r\n    });\r\n  };\r\n\r\n  async function createBreakfast() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedBreakfast = await API.graphql({\r\n      query: createBreakfastMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedBreakfast);\r\n    setRecipe([...recipe, savedBreakfast.data.createBreakfast]);\r\n\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n\r\n    console.log(recipeData);\r\n  }\r\n\r\n  async function createDinner() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedDinner = await API.graphql({\r\n      query: createDinnerMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedDinner);\r\n    setRecipe([...recipe, savedDinner.data.createDinner]);\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n    console.log(recipeData);\r\n  }\r\n\r\n  async function createLunch() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedLunch = await API.graphql({\r\n      query: createLunchMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedLunch);\r\n    setRecipe([...recipe, savedLunch.data.createLunch]);\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n    console.log(recipeData);\r\n  }\r\n  async function createSnack() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedSnack = await API.graphql({\r\n      query: createSnackMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedSnack);\r\n    setRecipe([...recipe, savedSnack.data.createSnack]);\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n    console.log(recipeData);\r\n  }\r\n\r\n  const selectCategory = (e) => {\r\n    setRecipeCreator(e.target.value);\r\n  };\r\n  console.log(recipeCreator);\r\n\r\n  const authHandler = (e) => {\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  console.log(credentials);\r\n\r\n  /*   const loginHandler = () => {\r\n    console.log(credentials);\r\n    credentials.username == username && credentials.password == password\r\n      ? setIsAuthenticated(true)\r\n      : setIsAuthenticated(false);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      {/*       {!isAuthenticated ? (\r\n        <>\r\n          <input\r\n            placeholder=\"käyttäjä\"\r\n            name=\"username\"\r\n            onChange={authHandler}\r\n          ></input>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"salasana\"\r\n            name=\"password\"\r\n            onChange={authHandler}\r\n          ></input>\r\n          <button onClick={loginHandler}>Kirjaudu</button>\r\n        </>\r\n      ) : ( */}\r\n      <AddRecipeCard\r\n        recipeData={recipeData}\r\n        setRecipeData={setRecipeData}\r\n        createRecipe={\r\n          recipeCreator === 1 ? (\r\n            createBreakfast\r\n          ) : recipeCreator === 2 ? (\r\n            createLunch\r\n          ) : recipeCreator === 3 ? (\r\n            createSnack\r\n          ) : recipeCreator === 4 ? (\r\n            createDinner\r\n          ) : (\r\n            <h3>Food category doesn't exist, please check path</h3>\r\n          )\r\n        }\r\n        category={\r\n          <FormControl variant=\"outlined\" size=\"small\">\r\n            <Select onChange={selectCategory}>\r\n              <MenuItem value={1}>Aamupala</MenuItem>\r\n              <MenuItem value={2}>Lounas</MenuItem>\r\n              <MenuItem value={3}>Välipala</MenuItem>\r\n              <MenuItem value={4}>Päivällinen</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        }\r\n        addIng={addIng}\r\n        changeIngHandler={changeIngHandler}\r\n        onChange={onChange}\r\n        recipeHandler={recipeHandler}\r\n        ingredients={ingredients}\r\n        removeIng={removeIng}\r\n        image={imgFile}\r\n      />\r\n      {/*  )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js",["107"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js",["108","109"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\__AddRecipe.js",["110"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\config.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Pagination.js",["111"],"import React, { useState } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst Pagination = ({\r\n  nextToken,\r\n  setNextToken,\r\n  newNextToken,\r\n  setNewNextToken,\r\n  prevToken,\r\n  setPrevToken,\r\n}) => {\r\n  const getNext = () => {\r\n    console.log(\"get next\");\r\n    setPrevToken((prev) => [...prev, nextToken]);\r\n    setNextToken(newNextToken);\r\n    setNewNextToken(null);\r\n  };\r\n\r\n  const getPrev = () => {\r\n    // console.log(\"get previous\")\r\n    setNextToken(prevToken.pop());\r\n    setPrevToken([...prevToken]);\r\n    setNewNextToken(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Grid item xs={12} style={{ marginLeft: \"1rem\" }}>\r\n        <Button onClick={getPrev}>Edelliset 10</Button>\r\n        <Button onClick={getNext}>Seuraavat 10</Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\RemoveModal.js",["112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":3,"nodeType":"121","messageId":"122","endLine":6,"endColumn":7},{"ruleId":"123","severity":1,"message":"124","line":30,"column":6,"nodeType":"125","endLine":30,"endColumn":17,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":3,"nodeType":"121","messageId":"122","endLine":3,"endColumn":7},{"ruleId":"119","severity":1,"message":"127","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":27},{"ruleId":"123","severity":1,"message":"128","line":43,"column":6,"nodeType":"125","endLine":43,"endColumn":8,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"130","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"131","line":15,"column":10,"nodeType":"121","messageId":"122","endLine":15,"endColumn":25},{"ruleId":"119","severity":1,"message":"132","line":15,"column":27,"nodeType":"121","messageId":"122","endLine":15,"endColumn":45},{"ruleId":"119","severity":1,"message":"133","line":218,"column":9,"nodeType":"121","messageId":"122","endLine":218,"endColumn":20},{"ruleId":"123","severity":1,"message":"128","line":56,"column":6,"nodeType":"125","endLine":56,"endColumn":8,"suggestions":"134"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"135","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"119","severity":1,"message":"130","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":36},{"ruleId":"119","severity":1,"message":"136","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"137","line":3,"column":15,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"119","severity":1,"message":"138","line":16,"column":10,"nodeType":"121","messageId":"122","endLine":16,"endColumn":19},{"ruleId":"119","severity":1,"message":"139","line":16,"column":21,"nodeType":"121","messageId":"122","endLine":16,"endColumn":33},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLunches'. Either include it or remove the dependency array.","ArrayExpression",["142"],"'deepPurple' is defined but never used.","React Hook useEffect has missing dependencies: 'category', 'fetchBreakfast', 'fetchDinner', 'fetchLunch', and 'fetchSnack'. Either include them or remove the dependency array.",["143"],"'useEffect' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","'authHandler' is assigned a value but never used.",["144"],"'DeleteOutlineIcon' is defined but never used.","'useState' is defined but never used.","'Storage' is defined but never used.","'breakfast' is assigned a value but never used.","'setBreakfast' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"147","fix":"149"},"Update the dependencies array to be: [fetchLunches, nextToken]",{"range":"150","text":"151"},"Update the dependencies array to be: [category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",{"range":"152","text":"153"},{"range":"154","text":"153"},[871,882],"[fetchLunches, nextToken]",[1148,1150],"[category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",[1759,1761]]