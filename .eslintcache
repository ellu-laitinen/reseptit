[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddBreakfast.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddDinner.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddLunch.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddSnack.js":"17","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js":"18"},{"size":277,"mtime":1617650206621,"results":"19","hashOfConfig":"20"},{"size":1126,"mtime":1618069039580,"results":"21","hashOfConfig":"20"},{"size":1919,"mtime":1618045594491,"results":"22","hashOfConfig":"20"},{"size":0,"mtime":1618068953854,"results":"23","hashOfConfig":"20"},{"size":2987,"mtime":1618068904086,"results":"24","hashOfConfig":"20"},{"size":2031,"mtime":1617812360293,"results":"25","hashOfConfig":"20"},{"size":2898,"mtime":1618069091197,"results":"26","hashOfConfig":"20"},{"size":879,"mtime":1618045903416,"results":"27","hashOfConfig":"20"},{"size":2003,"mtime":1617812226719,"results":"28","hashOfConfig":"20"},{"size":2100,"mtime":1617812159392,"results":"29","hashOfConfig":"20"},{"size":852,"mtime":1618044991835,"results":"30","hashOfConfig":"20"},{"size":3937,"mtime":1618044987555,"results":"31","hashOfConfig":"20"},{"size":2473,"mtime":1618044987415,"results":"32","hashOfConfig":"20"},{"size":5266,"mtime":1618045379491,"results":"33","hashOfConfig":"20"},{"size":3122,"mtime":1618036172494,"results":"34","hashOfConfig":"20"},{"size":3097,"mtime":1617810208755,"results":"35","hashOfConfig":"20"},{"size":3060,"mtime":1617808119486,"results":"36","hashOfConfig":"20"},{"size":689,"mtime":1618045924929,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15ilex8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["83","84"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["85"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",["86"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\";\r\n\r\nimport \"./NavBar.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  link: {\r\n    color: \"purple\",\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  title: {\r\n    color: \"purple\",\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div /* className={classes.root} */>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"toolbar\">\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              Ellun reseptipankki\r\n            </Link>\r\n          </Typography>\r\n          <Grid container spacing={2} justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/breakfast\" className={classes.link}>\r\n                Aamupalat\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/snacks\" className={classes.link}>\r\n                Väli- ja iltapalat\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/lunch\" className={classes.link}>\r\n                Lounaat\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/dinner\" className={classes.link}>\r\n                Päiväruuat\r\n              </Link>\r\n            </Grid>\r\n            <AmplifySignOut />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["87","88","89"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["90","91","92"],"import React, { useEffect, useState } from \"react\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listSnacks } from \"../../graphql/queries\";\r\nimport { deleteSnack as deleteSnacksMutation } from \"../../graphql/mutations\";\r\nimport { API } from \"aws-amplify\";\r\nimport axios from \"axios\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\n\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport AddSnack from \"../../AddRecipe/AddSnack\";\r\n\r\nconst Snacks = () => {\r\n  const [snacks, setSnacks] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchSnacks();\r\n  }, []);\r\n\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({ query: listSnacks });\r\n    setSnacks(apiData.data.listSnacks.items);\r\n    console.log(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function deleteSnack({ id }) {\r\n    const newSnackArray = snacks.filter((recipe) => recipe.id !== id);\r\n    setSnacks(newSnackArray);\r\n    await API.graphql({\r\n      query: deleteSnacksMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/:recipe/:postId`}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {snacks.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.img}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteSnack(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddSnack />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js",["93","94","95"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["96"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport { deleteLunch as deleteLunchMutation } from \"../../graphql/mutations\";\r\nimport { API } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport FullRecipe from \"../FullRecipe\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport AddLunch from \"../../AddRecipe/AddLunch\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({ query: listLunchs });\r\n    setLunch(apiData.data.listLunchs.items);\r\n    console.log(apiData.data.listLunchs.items);\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    const newBreakfastArray = lunch.filter((recipe) => recipe.id !== id);\r\n    setLunch(newBreakfastArray);\r\n    await API.graphql({\r\n      query: deleteLunchMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.img}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteLunch(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n\r\n              <Grid item xs={12}>\r\n                <AddLunch />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["97","98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listDinners } from \"../../graphql/queries\";\r\nimport { API } from \"aws-amplify\";\r\nimport { deleteDinner as deleteDinnerMutation } from \"../../graphql/mutations\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport AddRecipe from \"../../AddRecipe/AddBreakfast\";\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddDinner from \"../../AddRecipe/AddDinner\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchDinners();\r\n  }, []);\r\n\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({ query: listDinners });\r\n    setDinner(apiData.data.listDinners.items);\r\n    console.log(apiData.data.listDinners.items);\r\n  }\r\n\r\n  async function deleteDinner({ id }) {\r\n    const newBreakfastArray = dinner.filter((recipe) => recipe.id !== id);\r\n    setDinner(newBreakfastArray);\r\n    await API.graphql({\r\n      query: deleteDinnerMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {dinner.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.img}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteDinner(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddDinner />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddBreakfast.js",["100","101"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { listBreakfasts } from \"../graphql/queries\";\r\nimport { createBreakfast as createBreakfastMutation } from \"../graphql/mutations\";\r\n\r\nconst AddBreakfast = () => {\r\n  // const [ingredients, setIngredients] = useState([]);\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [breakfasts, setBreakfasts] = useState([]);\r\n  const [breakfastData, setBreakfastData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchBreakfasts();\r\n  }, []);\r\n\r\n  async function onChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    const file = e.target.files[0];\r\n    setBreakfastData({ ...breakfastData, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    fetchBreakfasts();\r\n  }\r\n\r\n  // BREAKFAST\r\n  async function fetchBreakfasts() {\r\n    const apiData = await API.graphql({ query: listBreakfasts });\r\n    const breakfastFromAPI = apiData.data.listBreakfasts.items;\r\n    await Promise.all(\r\n      breakfastFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n        }\r\n        return recipe;\r\n      })\r\n    );\r\n    setBreakfasts(apiData.data.listBreakfasts.items);\r\n  }\r\n\r\n  async function createBreakfast() {\r\n    if (\r\n      !breakfastData.title ||\r\n      !breakfastData.ingredients ||\r\n      !breakfastData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createBreakfastMutation,\r\n      variables: { input: breakfastData },\r\n    });\r\n    if (breakfastData.image) {\r\n      const image = await Storage.get(breakfastData.image);\r\n      breakfastData.image = image;\r\n    }\r\n    setBreakfasts([...breakfasts, breakfastData]);\r\n    setBreakfastData(initialState);\r\n  }\r\n\r\n  /*  const saveData = ({ name, value }) => {\r\n    setNewRecipe({\r\n      ...newRecipe,\r\n      [name]: value,\r\n    });\r\n  }; */\r\n\r\n  /*   const changeIngHandler = (e) => {\r\n    setIngredients({\r\n      ...ingredients,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }; */\r\n\r\n  /*   const addIng = (e) => {\r\n    e.preventDefault();\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newRecipe.ingredients, ingredients],\r\n    });\r\n    console.log(ingredients);\r\n  };\r\n  console.log(newRecipe);\r\n  console.log(ingredients); */\r\n  /* \r\n  const changeHandler = (e) => {\r\n    setNewRecipe({\r\n      ...newRecipe,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }; */\r\n\r\n  /*   const addRecipe = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"new recipe added\");\r\n    console.log(newRecipe);\r\n    axios\r\n      .post(`http://localhost:3001/breakfast`, newRecipe)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      });\r\n  };\r\n */\r\n  /*   const removeIng = (ingredients) => {\r\n    console.log(ingredients);\r\n    const newIngList = newRecipe.ingredients.filter(\r\n      (x) => x.ingredients !== ingredients\r\n    );\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngList],\r\n    });\r\n  }; */\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={breakfastData.title}\r\n            onChange={(e) =>\r\n              setBreakfastData({ ...breakfastData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={breakfastData.ingredients}\r\n            onChange={(e) =>\r\n              setBreakfastData({\r\n                ...breakfastData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={breakfastData.instructions}\r\n            onChange={(e) =>\r\n              setBreakfastData({\r\n                ...breakfastData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Grid item>\r\n          <input type=\"file\" onChange={onChange} />\r\n        </Grid>\r\n        <Button onClick={createBreakfast}>Lisää resepti</Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddBreakfast;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddDinner.js",["102","103","104"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listDinners } from \"../graphql/queries\";\r\nimport { createDinner as createDinnerMutation } from \"../graphql/mutations\";\r\n\r\nconst AddDinner = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [dinners, setDinners] = useState([]);\r\n  const [dinnerData, setDinnerData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchDinners();\r\n  }, []);\r\n\r\n  // DINNER\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({ query: listDinners });\r\n    setDinners(apiData.data.listDinners.items);\r\n  }\r\n\r\n  async function createDinner() {\r\n    if (\r\n      !dinnerData.title ||\r\n      !dinnerData.ingredients ||\r\n      !dinnerData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createDinnerMutation,\r\n      variables: { input: dinnerData },\r\n    });\r\n    setDinners([...dinners, dinnerData]);\r\n    setDinnerData(initialState);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={dinnerData.title}\r\n            onChange={(e) =>\r\n              setDinnerData({ ...dinnerData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={dinnerData.ingredients}\r\n            onChange={(e) =>\r\n              setDinnerData({\r\n                ...dinnerData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={dinnerData.instructions}\r\n            onChange={(e) =>\r\n              setDinnerData({\r\n                ...dinnerData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createDinner}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddDinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddLunch.js",["105","106","107","108"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listLunchs } from \"../graphql/queries\";\r\nimport {\r\n  createLunch as createLunchMutation,\r\n  deleteLunch as deleteLunchutation,\r\n} from \"../graphql/mutations\";\r\n\r\nconst AddLunch = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [lunches, setLunches] = useState([]);\r\n  const [lunchData, setLunchData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({ query: listLunchs });\r\n    setLunches(apiData.data.listLunchs.items);\r\n  }\r\n\r\n  async function createLunch() {\r\n    if (!lunchData.title || !lunchData.ingredients || !lunchData.instructions)\r\n      return;\r\n    await API.graphql({\r\n      query: createLunchMutation,\r\n      variables: { input: lunchData },\r\n    });\r\n    setLunches([...lunches, lunchData]);\r\n    setLunchData(initialState);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={lunchData.title}\r\n            onChange={(e) =>\r\n              setLunchData({ ...lunchData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={lunchData.ingredients}\r\n            onChange={(e) =>\r\n              setLunchData({\r\n                ...lunchData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={lunchData.instructions}\r\n            onChange={(e) =>\r\n              setLunchData({\r\n                ...lunchData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createLunch}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddLunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddSnack.js",["109","110","111"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listSnacks } from \"../graphql/queries\";\r\nimport { createSnack as createSnackMutation } from \"../graphql/mutations\";\r\n\r\nconst AddSnack = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [snackData, setSnackData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchSnacks();\r\n  }, []);\r\n\r\n  // DINNER\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({ query: listSnacks });\r\n    setSnacks(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function createSnack() {\r\n    if (!snackData.title || !snackData.ingredients || !snackData.instructions)\r\n      return;\r\n    await API.graphql({\r\n      query: createSnackMutation,\r\n      variables: { input: snackData },\r\n    });\r\n    setSnacks([...snacks, snackData]);\r\n    setSnackData(initialState);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={snackData.title}\r\n            onChange={(e) =>\r\n              setSnackData({ ...snackData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={snackData.ingredients}\r\n            onChange={(e) =>\r\n              setSnackData({\r\n                ...snackData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={snackData.instructions}\r\n            onChange={(e) =>\r\n              setSnackData({\r\n                ...snackData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createSnack}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddSnack;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":6,"column":3,"nodeType":"118","messageId":"119","endLine":6,"endColumn":7},{"ruleId":"116","severity":1,"message":"120","line":7,"column":8,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":4,"column":3,"nodeType":"118","messageId":"119","endLine":4,"endColumn":7},{"ruleId":"116","severity":1,"message":"121","line":16,"column":8,"nodeType":"118","messageId":"119","endLine":16,"endColumn":13},{"ruleId":"116","severity":1,"message":"122","line":23,"column":9,"nodeType":"118","messageId":"119","endLine":23,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":4,"column":3,"nodeType":"118","messageId":"119","endLine":4,"endColumn":7},{"ruleId":"116","severity":1,"message":"121","line":13,"column":8,"nodeType":"118","messageId":"119","endLine":13,"endColumn":13},{"ruleId":"116","severity":1,"message":"123","line":14,"column":10,"nodeType":"118","messageId":"119","endLine":14,"endColumn":14},{"ruleId":"116","severity":1,"message":"121","line":2,"column":8,"nodeType":"118","messageId":"119","endLine":2,"endColumn":13},{"ruleId":"116","severity":1,"message":"124","line":3,"column":21,"nodeType":"118","messageId":"119","endLine":3,"endColumn":34},{"ruleId":"125","severity":1,"message":"126","line":29,"column":6,"nodeType":"127","endLine":29,"endColumn":8,"suggestions":"128"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":3,"nodeType":"118","messageId":"119","endLine":3,"endColumn":7},{"ruleId":"116","severity":1,"message":"117","line":3,"column":3,"nodeType":"118","messageId":"119","endLine":3,"endColumn":7},{"ruleId":"116","severity":1,"message":"129","line":14,"column":8,"nodeType":"118","messageId":"119","endLine":14,"endColumn":17},{"ruleId":"116","severity":1,"message":"121","line":16,"column":8,"nodeType":"118","messageId":"119","endLine":16,"endColumn":13},{"ruleId":"116","severity":1,"message":"121","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"121","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"131","line":12,"column":3,"nodeType":"118","messageId":"119","endLine":12,"endColumn":10},{"ruleId":"116","severity":1,"message":"121","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"131","line":12,"column":3,"nodeType":"118","messageId":"119","endLine":12,"endColumn":10},{"ruleId":"116","severity":1,"message":"132","line":17,"column":18,"nodeType":"118","messageId":"119","endLine":17,"endColumn":36},{"ruleId":"116","severity":1,"message":"121","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"130","line":7,"column":3,"nodeType":"118","messageId":"119","endLine":7,"endColumn":13},{"ruleId":"116","severity":1,"message":"131","line":12,"column":3,"nodeType":"118","messageId":"119","endLine":12,"endColumn":10},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'axios' is defined but never used.","'recipe' is assigned a value but never used.","'Card' is defined but never used.","'useRouteMatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchBreakfast', 'fetchDinner', 'fetchLunch', 'fetchSnack', and 'recipe'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'AddRecipe' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'deleteLunchutation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},"Update the dependencies array to be: [fetchBreakfast, fetchDinner, fetchLunch, fetchSnack, recipe]",{"range":"138","text":"139"},[735,737],"[fetchBreakfast, fetchDinner, fetchLunch, fetchSnack, recipe]"]