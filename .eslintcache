[{"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\index.js":"1","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\App.js":"2","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\aws-exports.js":"3","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\NavBar\\NavBar.js":"4","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Theme\\theme.js":"5","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"6","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"7","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"8","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"9","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\RecipeCard.js":"10","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\queries.js":"11","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\mutations.js":"12","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js":"13","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js":"14","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js":"15","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js":"16","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js":"17","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js":"18"},{"size":277,"mtime":1618291138818,"results":"19","hashOfConfig":"20"},{"size":1126,"mtime":1618291138818,"results":"21","hashOfConfig":"20"},{"size":852,"mtime":1618921078582,"results":"22","hashOfConfig":"20"},{"size":2324,"mtime":1618291138818,"results":"23","hashOfConfig":"20"},{"size":833,"mtime":1618291138818,"results":"24","hashOfConfig":"20"},{"size":3962,"mtime":1619166401812,"results":"25","hashOfConfig":"20"},{"size":4083,"mtime":1619075849807,"results":"26","hashOfConfig":"20"},{"size":4027,"mtime":1619075843874,"results":"27","hashOfConfig":"20"},{"size":4139,"mtime":1619075852931,"results":"28","hashOfConfig":"20"},{"size":1445,"mtime":1618809028437,"results":"29","hashOfConfig":"20"},{"size":2473,"mtime":1618921075911,"results":"30","hashOfConfig":"20"},{"size":3937,"mtime":1618921076019,"results":"31","hashOfConfig":"20"},{"size":1289,"mtime":1619082729336,"results":"32","hashOfConfig":"20"},{"size":3396,"mtime":1619159742451,"results":"33","hashOfConfig":"20"},{"size":4091,"mtime":1619169110507,"results":"34","hashOfConfig":"20"},{"size":3348,"mtime":1619167579875,"results":"35","hashOfConfig":"20"},{"size":3177,"mtime":1619166411671,"results":"36","hashOfConfig":"20"},{"size":2687,"mtime":1619090944791,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"x7nvjp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\index.js",[],["79","80"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\App.js",["81"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { withAuthenticator } from \"@aws-amplify/ui-react\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport Breakfasts from \"./Recipes/Breakfasts/Breakfasts\";\r\nimport Snacks from \"./Recipes/Snacks/Snacks\";\r\nimport Lunch from \"./Recipes/Lunch/Lunch\";\r\nimport Dinner from \"./Recipes/Dinner/Dinner\";\r\n\r\nimport theme from \"./Theme/theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/breakfast\" />\r\n          </Route>\r\n          <Route path=\"/breakfast\" exact component={Breakfasts}></Route>\r\n          <Route path=\"/snacks\" exact component={Snacks}></Route>\r\n          <Route path=\"/lunch\" exact component={Lunch}></Route>\r\n          <Route path=\"/dinner\" exact component={Dinner}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withAuthenticator(App);\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\NavBar\\NavBar.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Theme\\theme.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["82","83"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["84"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport {\r\n  deleteLunch as deleteLunchMutation,\r\n  createLunch as createLunchMutation,\r\n} from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport AddRecipe from \"../AddRecipe/AddRecipe\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n  const [ingredients, setIngredients] = useState([])\r\n  let match = useRouteMatch();\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [lunchData, setLunchData] = useState(initialState);\r\n  const saveData = ({name, value}) => {\r\n    setLunchData({\r\n      ...lunchData,\r\n      [name]: value \r\n    })\r\n  }\r\n\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n     \r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  const addIng = (e) =>  {\r\n\r\n    e.preventDefault();\r\n    saveData({\r\n      name:\"ingredients\",\r\n      value: [...lunchData.ingredients, ingredients.ingredients]  \r\n    })\r\n\r\n  /*   const ings = breakfastData.ingredients.map((i) => {\r\n      return (\r\n        i.ingredients\r\n      )\r\n      \r\n    }) */\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({ query: listLunchs });\r\n    const lunchFromAPI = apiData.data.listLunchs.items;\r\n    console.log(apiData.data.listLunchs.items);\r\n    await Promise.all(\r\n      lunchFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setLunch(lunchFromAPI);\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    const newLunchArray = lunch.filter((recipe) => recipe.id !== id);\r\n    setLunch(newLunchArray);\r\n    await API.graphql({\r\n      query: deleteLunchMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  // create a new recipe\r\n  async function createLunch() {\r\n    if (!lunchData.title || !lunchData.ingredients || !lunchData.instructions)\r\n      return;\r\n    let savedLunch = await API.graphql({\r\n      query: createLunchMutation,\r\n      variables: { input: lunchData },\r\n    });\r\n    if (lunchData.image) {\r\n      const savedImage = await Storage.get(lunchData.image);\r\n      savedLunch.data.createLunch.image = savedImage;\r\n    }\r\n    setLunch([...lunch, savedLunch.data.createLunch]);\r\n\r\n    setLunchData(initialState);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Lounaat</Typography>\r\n              </Grid>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteLunch(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n\r\n              <Grid item xs={12}>\r\n                <AddRecipe\r\n                  recipeData={lunchData}\r\n                  setRecipeData={setLunchData}\r\n                  createRecipe={createLunch}\r\n                  category={\"lounas\"}\r\n                  addIng={addIng}\r\n                  changeIngHandler={changeIngHandler}\r\n               \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["85"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listDinners } from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  deleteDinner as deleteDinnerMutation,\r\n  createDinner as createDinnerMutation,\r\n} from \"../../graphql/mutations\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport AddRecipe from \"../AddRecipe/AddRecipe\";\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  const [ingredients, setIngredients] = useState([])\r\n\r\n  let match = useRouteMatch();\r\n\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [dinnerData, setDinnerData] = useState(initialState);\r\n\r\n  const saveData = ({name, value}) => {\r\n    setDinnerData({\r\n      ...dinnerData,\r\n      [name]: value \r\n    })\r\n  }\r\n\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n     \r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  const addIng = (e) =>  {\r\n\r\n    e.preventDefault();\r\n    saveData({\r\n      name:\"ingredients\",\r\n      value: [...dinnerData.ingredients, ingredients.ingredients] \r\n    })\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchDinners();\r\n  }, []);\r\n\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({ query: listDinners });\r\n    const dinnerFromAPI = apiData.data.listDinners.items;\r\n    await Promise.all(\r\n      dinnerFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setDinner(dinnerFromAPI);\r\n    //  console.log(breakfastFromAPI);\r\n  }\r\n\r\n  // DELETE dinner\r\n\r\n  async function deleteDinner({ id }) {\r\n    const newDinnerArray = dinner.filter((recipe) => recipe.id !== id);\r\n    setDinner(newDinnerArray);\r\n    await API.graphql({\r\n      query: deleteDinnerMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  // create a new recipe\r\n  async function createDinner() {\r\n    if (\r\n      !dinnerData.title ||\r\n      !dinnerData.ingredients ||\r\n      !dinnerData.instructions\r\n    )\r\n      return;\r\n    let savedDinner = await API.graphql({\r\n      query: createDinnerMutation,\r\n      variables: { input: dinnerData },\r\n    });\r\n    if (dinnerData.image) {\r\n      const image = await Storage.get(dinnerData.image);\r\n      savedDinner.data.createDinner.image = image;\r\n    }\r\n    setDinner([...dinner, savedDinner.data.createDinner]);\r\n\r\n    setDinnerData(initialState);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Päiväruuat</Typography>\r\n              </Grid>\r\n              {dinner.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteDinner(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddRecipe\r\n                  recipeData={dinnerData}\r\n                  setRecipeData={setDinnerData}\r\n                  createRecipe={createDinner}\r\n                  category={\"päiväruoka\"}\r\n                  addIng={addIng}\r\n                  changeIngHandler={changeIngHandler}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["86"],"import React, { useEffect, useState } from \"react\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listSnacks } from \"../../graphql/queries\";\r\nimport {\r\n  deleteSnack as deleteSnacksMutation,\r\n  createSnack as createSnackMutation,\r\n} from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport AddRecipe from \"../AddRecipe/AddRecipe\";\r\n\r\nconst Snacks = () => {\r\n  const [snacks, setSnacks] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  const [ingredients, setIngredients] = useState([])\r\n\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: ingredients,\r\n    instructions: \"\",\r\n  };\r\n  const [snackData, setSnackData] = useState(initialState);\r\n\r\n  const saveData = ({name, value}) => {\r\n    setSnackData({\r\n      ...snackData,\r\n      [name]: value \r\n    })\r\n  }\r\n\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n     \r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  const addIng = (e) =>  {\r\n\r\n    e.preventDefault();\r\n    saveData({\r\n      name:\"ingredients\",\r\n      value: [...snackData.ingredients, ingredients.ingredients]  \r\n    })\r\n\r\n  /*   const ings = breakfastData.ingredients.map((i) => {\r\n      return (\r\n        i.ingredients\r\n      )\r\n      \r\n    }) */\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSnacks();\r\n  }, []);\r\n\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({ query: listSnacks });\r\n    const snackFromAPI = apiData.data.listSnacks.items;\r\n    await Promise.all(\r\n      snackFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setSnacks(snackFromAPI);\r\n    console.log(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function deleteSnack({ id }) {\r\n    const newSnackArray = snacks.filter((recipe) => recipe.id !== id);\r\n    setSnacks(newSnackArray);\r\n    await API.graphql({\r\n      query: deleteSnacksMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  // create a new recipe\r\n  async function createSnack() {\r\n    if (!snackData.title || !snackData.ingredients || !snackData.instructions)\r\n      return;\r\n    let savedSnack = await API.graphql({\r\n      query: createSnackMutation,\r\n      variables: { input: snackData },\r\n    });\r\n    if (snackData.image) {\r\n      const image = await Storage.get(snackData.image);\r\n      savedSnack.data.createSnack.image = image;\r\n    }\r\n    setSnacks([...snacks, savedSnack.data.createSnack]);\r\n\r\n    setSnackData(initialState);\r\n\r\n  }\r\n\r\n\r\n  console.log(snackData)\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/:category/:postId`}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Ilta- ja välipalat</Typography>\r\n              </Grid>\r\n              {snacks.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteSnack(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddRecipe\r\n                  recipeData={snackData}\r\n                  setRecipeData={setSnackData}\r\n                  createRecipe={createSnack}\r\n                  category={\"välipala\"}\r\n                  addIng={addIng}\r\n                  changeIngHandler={changeIngHandler}\r\n               \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js",["87","88","89","90","91","92"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js",["93","94","95","96","97","98","99","100","101","102"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js",["103"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":3,"nodeType":"110","messageId":"111","endLine":6,"endColumn":7},{"ruleId":"108","severity":1,"message":"112","line":3,"column":3,"nodeType":"110","messageId":"111","endLine":3,"endColumn":12},{"ruleId":"108","severity":1,"message":"109","line":4,"column":3,"nodeType":"110","messageId":"111","endLine":4,"endColumn":7},{"ruleId":"108","severity":1,"message":"109","line":3,"column":3,"nodeType":"110","messageId":"111","endLine":3,"endColumn":7},{"ruleId":"108","severity":1,"message":"109","line":3,"column":3,"nodeType":"110","messageId":"111","endLine":3,"endColumn":7},{"ruleId":"108","severity":1,"message":"109","line":4,"column":3,"nodeType":"110","messageId":"111","endLine":4,"endColumn":7},{"ruleId":"108","severity":1,"message":"109","line":2,"column":44,"nodeType":"110","messageId":"111","endLine":2,"endColumn":48},{"ruleId":"108","severity":1,"message":"113","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"114","line":3,"column":16,"nodeType":"110","messageId":"111","endLine":3,"endColumn":20},{"ruleId":"108","severity":1,"message":"115","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":32},{"ruleId":"108","severity":1,"message":"116","line":3,"column":34,"nodeType":"110","messageId":"111","endLine":3,"endColumn":40},{"ruleId":"117","severity":1,"message":"118","line":34,"column":6,"nodeType":"119","endLine":34,"endColumn":8,"suggestions":"120"},{"ruleId":"108","severity":1,"message":"121","line":6,"column":3,"nodeType":"110","messageId":"111","endLine":6,"endColumn":12},{"ruleId":"108","severity":1,"message":"116","line":7,"column":3,"nodeType":"110","messageId":"111","endLine":7,"endColumn":9},{"ruleId":"108","severity":1,"message":"122","line":8,"column":3,"nodeType":"110","messageId":"111","endLine":8,"endColumn":19},{"ruleId":"108","severity":1,"message":"123","line":9,"column":3,"nodeType":"110","messageId":"111","endLine":9,"endColumn":13},{"ruleId":"108","severity":1,"message":"114","line":10,"column":3,"nodeType":"110","messageId":"111","endLine":10,"endColumn":7},{"ruleId":"108","severity":1,"message":"113","line":11,"column":3,"nodeType":"110","messageId":"111","endLine":11,"endColumn":7},{"ruleId":"108","severity":1,"message":"115","line":12,"column":3,"nodeType":"110","messageId":"111","endLine":12,"endColumn":13},{"ruleId":"108","severity":1,"message":"124","line":16,"column":10,"nodeType":"110","messageId":"111","endLine":16,"endColumn":39},{"ruleId":"117","severity":1,"message":"125","line":27,"column":6,"nodeType":"119","endLine":27,"endColumn":8,"suggestions":"126"},{"ruleId":"108","severity":1,"message":"127","line":99,"column":9,"nodeType":"110","messageId":"111","endLine":99,"endColumn":22},{"ruleId":"108","severity":1,"message":"128","line":1,"column":27,"nodeType":"110","messageId":"111","endLine":1,"endColumn":36},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'Card' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category', 'fetchBreakfast', 'fetchDinner', 'fetchLunch', and 'fetchSnack'. Either include them or remove the dependency array.","ArrayExpression",["131"],"'TextField' is defined but never used.","'TextareaAutosize' is defined but never used.","'InputLabel' is defined but never used.","'LocalConvenienceStoreOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchBreakfast'. Either include it or remove the dependency array.",["132"],"'addIngredient' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",{"range":"137","text":"138"},"Update the dependencies array to be: [fetchBreakfast]",{"range":"139","text":"140"},[1022,1024],"[category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",[833,835],"[fetchBreakfast]"]