[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js":"17","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js":"18","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddDinner.js":"19"},{"size":277,"mtime":1617650206621,"results":"20","hashOfConfig":"21"},{"size":1126,"mtime":1627718434671,"results":"22","hashOfConfig":"21"},{"size":813,"mtime":1627719077666,"results":"23","hashOfConfig":"21"},{"size":2383,"mtime":1619865219449,"results":"24","hashOfConfig":"21"},{"size":4139,"mtime":1619865219463,"results":"25","hashOfConfig":"21"},{"size":4083,"mtime":1619865219460,"results":"26","hashOfConfig":"21"},{"size":3810,"mtime":1627724984303,"results":"27","hashOfConfig":"21"},{"size":986,"mtime":1627720654585,"results":"28","hashOfConfig":"21"},{"size":4010,"mtime":1627724398934,"results":"29","hashOfConfig":"21"},{"size":2473,"mtime":1618044987415,"results":"30","hashOfConfig":"21"},{"size":3937,"mtime":1618044987555,"results":"31","hashOfConfig":"21"},{"size":3440,"mtime":1627724591808,"results":"32","hashOfConfig":"21"},{"size":1377,"mtime":1627722646561,"results":"33","hashOfConfig":"21"},{"size":3028,"mtime":1627724390937,"results":"34","hashOfConfig":"21"},{"size":4331,"mtime":1619865219455,"results":"35","hashOfConfig":"21"},{"size":1530,"mtime":1627724600267,"results":"36","hashOfConfig":"21"},{"size":3886,"mtime":1627723748571,"results":"37","hashOfConfig":"21"},{"size":3823,"mtime":1619865219457,"results":"38","hashOfConfig":"21"},{"size":2917,"mtime":1627724464430,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"15ilex8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["82","83"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["84"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["85"],"import React, { useEffect, useState } from \"react\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listSnacks } from \"../../graphql/queries\";\r\nimport {\r\n  deleteSnack as deleteSnacksMutation,\r\n  createSnack as createSnackMutation,\r\n} from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport AddRecipe from \"../AddRecipe/AddRecipe\";\r\n\r\nconst Snacks = () => {\r\n  const [snacks, setSnacks] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  const [ingredients, setIngredients] = useState([])\r\n\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: ingredients,\r\n    instructions: \"\",\r\n  };\r\n  const [snackData, setSnackData] = useState(initialState);\r\n\r\n  const saveData = ({name, value}) => {\r\n    setSnackData({\r\n      ...snackData,\r\n      [name]: value \r\n    })\r\n  }\r\n\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n     \r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  const addIng = (e) =>  {\r\n\r\n    e.preventDefault();\r\n    saveData({\r\n      name:\"ingredients\",\r\n      value: [...snackData.ingredients, ingredients.ingredients]  \r\n    })\r\n\r\n  /*   const ings = breakfastData.ingredients.map((i) => {\r\n      return (\r\n        i.ingredients\r\n      )\r\n      \r\n    }) */\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSnacks();\r\n  }, []);\r\n\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({ query: listSnacks });\r\n    const snackFromAPI = apiData.data.listSnacks.items;\r\n    await Promise.all(\r\n      snackFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setSnacks(snackFromAPI);\r\n    console.log(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function deleteSnack({ id }) {\r\n    const newSnackArray = snacks.filter((recipe) => recipe.id !== id);\r\n    setSnacks(newSnackArray);\r\n    await API.graphql({\r\n      query: deleteSnacksMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  // create a new recipe\r\n  async function createSnack() {\r\n    if (!snackData.title || !snackData.ingredients || !snackData.instructions)\r\n      return;\r\n    let savedSnack = await API.graphql({\r\n      query: createSnackMutation,\r\n      variables: { input: snackData },\r\n    });\r\n    if (snackData.image) {\r\n      const image = await Storage.get(snackData.image);\r\n      savedSnack.data.createSnack.image = image;\r\n    }\r\n    setSnacks([...snacks, savedSnack.data.createSnack]);\r\n\r\n    setSnackData(initialState);\r\n\r\n  }\r\n\r\n\r\n  console.log(snackData)\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/:category/:postId`}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Ilta- ja v√§lipalat</Typography>\r\n              </Grid>\r\n              {snacks.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteSnack(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddRecipe\r\n                  recipeData={snackData}\r\n                  setRecipeData={setSnackData}\r\n                  createRecipe={createSnack}\r\n                  category={\"v√§lipala\"}\r\n                  addIng={addIng}\r\n                  changeIngHandler={changeIngHandler}\r\n               \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["86"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport {\r\n  deleteLunch as deleteLunchMutation,\r\n  createLunch as createLunchMutation,\r\n} from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport AddRecipe from \"../AddRecipe/AddRecipe\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n  const [ingredients, setIngredients] = useState([])\r\n  let match = useRouteMatch();\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [lunchData, setLunchData] = useState(initialState);\r\n  const saveData = ({name, value}) => {\r\n    setLunchData({\r\n      ...lunchData,\r\n      [name]: value \r\n    })\r\n  }\r\n\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n     \r\n      [e.target.name]:e.target.value\r\n    })\r\n  }\r\n  const addIng = (e) =>  {\r\n\r\n    e.preventDefault();\r\n    saveData({\r\n      name:\"ingredients\",\r\n      value: [...lunchData.ingredients, ingredients.ingredients]  \r\n    })\r\n\r\n  /*   const ings = breakfastData.ingredients.map((i) => {\r\n      return (\r\n        i.ingredients\r\n      )\r\n      \r\n    }) */\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({ query: listLunchs });\r\n    const lunchFromAPI = apiData.data.listLunchs.items;\r\n    console.log(apiData.data.listLunchs.items);\r\n    await Promise.all(\r\n      lunchFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setLunch(lunchFromAPI);\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    const newLunchArray = lunch.filter((recipe) => recipe.id !== id);\r\n    setLunch(newLunchArray);\r\n    await API.graphql({\r\n      query: deleteLunchMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  // create a new recipe\r\n  async function createLunch() {\r\n    if (!lunchData.title || !lunchData.ingredients || !lunchData.instructions)\r\n      return;\r\n    let savedLunch = await API.graphql({\r\n      query: createLunchMutation,\r\n      variables: { input: lunchData },\r\n    });\r\n    if (lunchData.image) {\r\n      const savedImage = await Storage.get(lunchData.image);\r\n      savedLunch.data.createLunch.image = savedImage;\r\n    }\r\n    setLunch([...lunch, savedLunch.data.createLunch]);\r\n\r\n    setLunchData(initialState);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Lounaat</Typography>\r\n              </Grid>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteLunch(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n\r\n              <Grid item xs={12}>\r\n                <AddRecipe\r\n                  recipeData={lunchData}\r\n                  setRecipeData={setLunchData}\r\n                  createRecipe={createLunch}\r\n                  category={\"lounas\"}\r\n                  addIng={addIng}\r\n                  changeIngHandler={changeIngHandler}\r\n               \r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["87","88","89","90"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js",["91","92"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["93","94"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js",["95","96","97","98","99","100"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",["101"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js",["102"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js",["103"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as queries from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { updateBreakfast as updateBreakfastMutation } from \"../../graphql/mutations\";\r\nimport EditRecipeCard from \"./EditRecipeCard\";\r\n\r\nconst EditRecipe = () => {\r\n  let { id } = useParams();\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n\r\n  console.log(id);\r\n  useEffect(() => {\r\n    fetchBreakfast();\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: id },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n\r\n    /*    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    } */\r\n    setLoadedRecipe(recipeFromAPI);\r\n    setIngredients(recipeFromAPI.ingredients);\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setLoadedRecipe({\r\n      ...loadedRecipe,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const newRecipe = {\r\n    id: loadedRecipe.id,\r\n    title: loadedRecipe.title,\r\n    ingredients: ingredients,\r\n    instructions: loadedRecipe.instructions,\r\n    image: loadedRecipe.image,\r\n  };\r\n  console.log(newRecipe);\r\n\r\n  async function onChange(e) {\r\n    console.log(loadedRecipe.image);\r\n\r\n    if (!e.target.files[0]) return;\r\n    console.log(\"saving new image1\");\r\n    const file = e.target.files[0];\r\n    setLoadedRecipe({ ...newRecipe, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    /*      const img = await Storage.get(key.key)  */\r\n  }\r\n\r\n  const ingHandler = (e, index) => {\r\n    loadedRecipe.ingredients[index] = e.target.value;\r\n\r\n    console.log(index);\r\n    setIngredients([...loadedRecipe.ingredients]);\r\n  };\r\n\r\n  const saveData = ({ name, value }) => {\r\n    setNewIngredient({\r\n      ...newIngredient,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addIngHandler = () => {\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...ingredients, newIngredient.ingredient],\r\n    });\r\n    setIngredients([...ingredients, newIngredient.ingredient]);\r\n  };\r\n\r\n  const changeIngHandler = (e) => {\r\n    console.log(\"changeIngHandler\");\r\n    setNewIngredient({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const removeIngHandler = (id) => {\r\n    console.log(\"remove\");\r\n\r\n    console.log(id);\r\n    const newIngArray = ingredients.filter((item) => item !== id);\r\n    console.log(newIngArray);\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngArray],\r\n    });\r\n    setIngredients(newIngArray);\r\n  };\r\n\r\n  console.log(\"newingredient\");\r\n  console.log(newIngredient);\r\n  console.log(\"ingredients\");\r\n  console.log(ingredients);\r\n  console.log(newRecipe);\r\n\r\n  async function saveRecipe() {\r\n    console.log(\"new data saved\");\r\n\r\n    await API.graphql({\r\n      query: updateBreakfastMutation,\r\n      variables: { input: newRecipe },\r\n    });\r\n    /* \r\n    if (newRecipe.image) {\r\n      console.log(\"saving new img2\");\r\n      const image = await Storage.get(newRecipe.image);\r\n      console.log(image)\r\n      newRecipe.image = image;\r\n      console.log(image);\r\n    } */\r\n    console.log(newRecipe);\r\n    console.log(newRecipe.image);\r\n\r\n    alert(\"tallenenttu!\");\r\n  }\r\n\r\n  //Remove image\r\n\r\n  async function removeImg() {\r\n    const img = await Storage.get(loadedRecipe.image);\r\n\r\n    // image name/key is too long, must be shortened\r\n    const image = img.slice(0, 300);\r\n\r\n    await Storage.remove(image);\r\n    setLoadedRecipe({ ...newRecipe, image: \"\" });\r\n  }\r\n\r\n  console.log(loadedRecipe);\r\n\r\n  return (\r\n    <EditRecipeCard\r\n      loadedRecipe={loadedRecipe}\r\n      recipeHandler={recipeHandler}\r\n      ingHandler={ingHandler}\r\n      onChange={onChange}\r\n      removeImg={removeImg}\r\n      addIngHandler={addIngHandler}\r\n      add\r\n      saveRecipe={saveRecipe}\r\n      removeIngHandler={removeIngHandler}\r\n      changeIngHandler={changeIngHandler}\r\n      ingredients={ingredients}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js",["104"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddDinner.js",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":6,"column":3,"nodeType":"112","messageId":"113","endLine":6,"endColumn":7},{"ruleId":"110","severity":1,"message":"111","line":4,"column":3,"nodeType":"112","messageId":"113","endLine":4,"endColumn":7},{"ruleId":"110","severity":1,"message":"111","line":3,"column":3,"nodeType":"112","messageId":"113","endLine":3,"endColumn":7},{"ruleId":"110","severity":1,"message":"111","line":3,"column":3,"nodeType":"112","messageId":"113","endLine":3,"endColumn":7},{"ruleId":"110","severity":1,"message":"114","line":42,"column":9,"nodeType":"112","messageId":"113","endLine":42,"endColumn":25},{"ruleId":"110","severity":1,"message":"115","line":47,"column":9,"nodeType":"112","messageId":"113","endLine":47,"endColumn":15},{"ruleId":"110","severity":1,"message":"116","line":85,"column":18,"nodeType":"112","messageId":"113","endLine":85,"endColumn":30},{"ruleId":"110","severity":1,"message":"117","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":17,"column":5,"nodeType":"120","messageId":"121","endLine":17,"endColumn":13},{"ruleId":"110","severity":1,"message":"122","line":3,"column":3,"nodeType":"112","messageId":"113","endLine":3,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":4,"column":3,"nodeType":"112","messageId":"113","endLine":4,"endColumn":7},{"ruleId":"110","severity":1,"message":"111","line":6,"column":3,"nodeType":"112","messageId":"113","endLine":6,"endColumn":7},{"ruleId":"110","severity":1,"message":"123","line":10,"column":10,"nodeType":"112","messageId":"113","endLine":10,"endColumn":14},{"ruleId":"110","severity":1,"message":"124","line":10,"column":16,"nodeType":"112","messageId":"113","endLine":10,"endColumn":20},{"ruleId":"110","severity":1,"message":"125","line":10,"column":22,"nodeType":"112","messageId":"113","endLine":10,"endColumn":32},{"ruleId":"110","severity":1,"message":"126","line":10,"column":34,"nodeType":"112","messageId":"113","endLine":10,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":41,"column":6,"nodeType":"129","endLine":41,"endColumn":8,"suggestions":"130"},{"ruleId":"110","severity":1,"message":"131","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":24},{"ruleId":"110","severity":1,"message":"132","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"133","line":17,"column":6,"nodeType":"129","endLine":17,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":122,"column":15,"nodeType":"137","endLine":122,"endColumn":45},{"ruleId":"110","severity":1,"message":"132","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'changeIngHandler' is assigned a value but never used.","'addIng' is assigned a value but never used.","'createDinner' is defined but never used.","'red' is defined but never used.","no-dupe-keys","Duplicate key 'outlined'.","ObjectExpression","unexpected","'useParams' is defined but never used.","'Card' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category', 'fetchBreakfast', 'fetchDinner', 'fetchLunch', and 'fetchSnack'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'ArrowForwardIcon' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchBreakfast'. Either include it or remove the dependency array.",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",{"range":"146","text":"147"},"Update the dependencies array to be: [fetchBreakfast]",{"range":"148","text":"149"},[1043,1045],"[category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",[632,634],"[fetchBreakfast]"]