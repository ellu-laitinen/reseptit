[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js":"17","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js":"18","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\__AddRecipe.js":"19","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\config.js":"20","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Pagination.js":"21"},{"size":277,"mtime":1617650206621,"results":"22","hashOfConfig":"23"},{"size":1307,"mtime":1627813983168,"results":"24","hashOfConfig":"23"},{"size":852,"mtime":1627745853154,"results":"25","hashOfConfig":"23"},{"size":2370,"mtime":1627815187197,"results":"26","hashOfConfig":"23"},{"size":3146,"mtime":1627818688807,"results":"27","hashOfConfig":"23"},{"size":2987,"mtime":1627818684916,"results":"28","hashOfConfig":"23"},{"size":3190,"mtime":1627818678610,"results":"29","hashOfConfig":"23"},{"size":902,"mtime":1627816509762,"results":"30","hashOfConfig":"23"},{"size":3900,"mtime":1627818675797,"results":"31","hashOfConfig":"23"},{"size":2473,"mtime":1627745849748,"results":"32","hashOfConfig":"23"},{"size":3937,"mtime":1627745849939,"results":"33","hashOfConfig":"23"},{"size":3388,"mtime":1627816531542,"results":"34","hashOfConfig":"23"},{"size":1312,"mtime":1627750829557,"results":"35","hashOfConfig":"23"},{"size":7846,"mtime":1627820028351,"results":"36","hashOfConfig":"23"},{"size":4331,"mtime":1619865219455,"results":"37","hashOfConfig":"23"},{"size":2017,"mtime":1627818057160,"results":"38","hashOfConfig":"23"},{"size":4109,"mtime":1627818355985,"results":"39","hashOfConfig":"23"},{"size":3823,"mtime":1619865219457,"results":"40","hashOfConfig":"23"},{"size":3028,"mtime":1627749137341,"results":"41","hashOfConfig":"23"},{"size":92,"mtime":1627814659450,"results":"42","hashOfConfig":"23"},{"size":848,"mtime":1627816066276,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"15ilex8",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["94","95"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["96"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { withAuthenticator } from \"@aws-amplify/ui-react\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport Breakfasts from \"./Recipes/Breakfasts/Breakfasts\";\r\nimport Snacks from \"./Recipes/Snacks/Snacks\";\r\nimport Lunch from \"./Recipes/Lunch/Lunch\";\r\nimport Dinner from \"./Recipes/Dinner/Dinner\";\r\nimport AddRecipe from \"./Recipes/AddRecipe/AddRecipe\";\r\n\r\nimport theme from \"./Theme/theme\";\r\nrequire(\"dotenv\").config();\r\n\r\nfunction App() {\r\n  console.log(process.env);\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/breakfast\" />\r\n          </Route>\r\n          <Route path=\"/breakfast\" exact component={Breakfasts}></Route>\r\n          <Route path=\"/snacks\" exact component={Snacks}></Route>\r\n          <Route path=\"/lunch\" exact component={Lunch}></Route>\r\n          <Route path=\"/dinner\" exact component={Dinner}></Route>\r\n          <Route path=\"/add\" exact component={AddRecipe}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withAuthenticator(App);\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["97"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport { deleteLunch as deleteLunchMutation } from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n  console.log(match);\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, [nextToken]);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({\r\n      query: listLunchs,\r\n      variables: { nextToken, limit: 10 },\r\n    });\r\n    setNewNextToken(apiData.data.listLunchs.nextToken);\r\n    const lunchFromAPI = apiData.data.listLunchs.items;\r\n    console.log(apiData.data.listLunchs.items);\r\n    await Promise.all(\r\n      lunchFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setLunch(lunchFromAPI);\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    const newLunchArray = lunch.filter((recipe) => recipe.id !== id);\r\n    setLunch(newLunchArray);\r\n    await API.graphql({\r\n      query: deleteLunchMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Lounaat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteLunch(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["98"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listDinners } from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { deleteDinner as deleteDinnerMutation } from \"../../graphql/mutations\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchDinners() {\r\n      const apiData = await API.graphql({\r\n        query: listDinners,\r\n        variables: { nextToken, limit: 10 },\r\n      });\r\n      setNewNextToken(apiData.data.listDinners.nextToken);\r\n      const dinnerFromAPI = apiData.data.listDinners.items;\r\n      await Promise.all(\r\n        dinnerFromAPI.map(async (recipe) => {\r\n          if (recipe.image) {\r\n            const image = await Storage.get(recipe.image);\r\n            recipe.image = image;\r\n            //      console.log(recipe.image);\r\n          }\r\n        })\r\n      );\r\n      setDinner(dinnerFromAPI);\r\n      //  console.log(breakfastFromAPI);\r\n    }\r\n    fetchDinners();\r\n  }, [nextToken]);\r\n  // DELETE dinner\r\n  console.log(dinner);\r\n  async function deleteDinner({ id }) {\r\n    const newDinnerArray = dinner.filter((recipe) => recipe.id !== id);\r\n    setDinner(newDinnerArray);\r\n    await API.graphql({\r\n      query: deleteDinnerMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Päiväruuat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {dinner.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteDinner(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {/*     <Grid item xs={12}>\r\n                <AddRecipe category={\"päiväruoca\"} />\r\n              </Grid> */}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js",["99"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useParams,\r\n  Switch,\r\n  useRouteMatch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\n\r\nimport * as queries from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\n\r\nimport EditRecipe from \"../EditRecipe/EditRecipe\";\r\nimport FullRecipeCard from \"./FullRecipeCard\";\r\n\r\nconst FullRecipe = () => {\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n  let match = useRouteMatch();\r\n\r\n  // useParams checks the parameters of the URL that match,\r\n  // e.g.  /:category/:postId\r\n  let { postId, category } = useParams();\r\n  console.log(category);\r\n\r\n  // try switch case??\r\n  useEffect(() => {\r\n    if (category === \"breakfast\") {\r\n      console.log(category);\r\n      fetchBreakfast();\r\n    }\r\n    if (category === \"dinner\") {\r\n      fetchDinner();\r\n    }\r\n    if (category === \"lunch\") {\r\n      fetchLunch();\r\n    }\r\n    if (category === \"snacks\") {\r\n      fetchSnack();\r\n    }\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(recipeFromAPI);\r\n  }\r\n\r\n  async function fetchDinner() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getDinner,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getDinner;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getDinner);\r\n  }\r\n\r\n  async function fetchLunch() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getLunch,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getLunch;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getLunch);\r\n    console.log(apiData.data.getLunch);\r\n  }\r\n\r\n  async function fetchSnack() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getSnack,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getSnack;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getSnack);\r\n    console.log(apiData.data.getSnack);\r\n  }\r\n\r\n  console.log(match.url);\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path={`${match.url}/edit/:id`}>\r\n          <EditRecipe />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <FullRecipeCard link={match.url} loadedRecipe={loadedRecipe} />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default FullRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js",["100","101","102","103"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as queries from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { updateBreakfast as updateBreakfastMutation } from \"../../graphql/mutations\";\r\nimport EditRecipeCard from \"./EditRecipeCard\";\r\n\r\nconst EditRecipe = () => {\r\n  let { id } = useParams();\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n\r\n  console.log(id);\r\n  useEffect(() => {\r\n    fetchBreakfast();\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: id },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n\r\n    /*    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    } */\r\n    setLoadedRecipe(recipeFromAPI);\r\n    setIngredients(recipeFromAPI.ingredients);\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setLoadedRecipe({\r\n      ...loadedRecipe,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const newRecipe = {\r\n    id: loadedRecipe.id,\r\n    title: loadedRecipe.title,\r\n    ingredients: ingredients,\r\n    instructions: loadedRecipe.instructions,\r\n    image: loadedRecipe.image,\r\n  };\r\n  console.log(newRecipe);\r\n\r\n  async function onChange(e) {\r\n    console.log(loadedRecipe.image);\r\n\r\n    if (!e.target.files[0]) return;\r\n    console.log(\"saving new image1\");\r\n    const file = e.target.files[0];\r\n    setLoadedRecipe({ ...newRecipe, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    /*      const img = await Storage.get(key.key)  */\r\n  }\r\n\r\n  const ingHandler = (e, index) => {\r\n    loadedRecipe.ingredients[index] = e.target.value;\r\n\r\n    console.log(index);\r\n    setIngredients([...loadedRecipe.ingredients]);\r\n  };\r\n\r\n  const saveData = ({ name, value }) => {\r\n    setNewIngredient({\r\n      ...newIngredient,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addIngHandler = () => {\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...ingredients, newIngredient.ingredient],\r\n    });\r\n    setIngredients([...ingredients, newIngredient.ingredient]);\r\n  };\r\n\r\n  const changeIngHandler = (e) => {\r\n    console.log(\"changeIngHandler\");\r\n    setNewIngredient({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const removeIngHandler = (id) => {\r\n    console.log(\"remove\");\r\n\r\n    console.log(id);\r\n    const newIngArray = ingredients.filter((item) => item !== id);\r\n    console.log(newIngArray);\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngArray],\r\n    });\r\n    setIngredients(newIngArray);\r\n  };\r\n\r\n  console.log(\"newingredient\");\r\n  console.log(newIngredient);\r\n  console.log(\"ingredients\");\r\n  console.log(ingredients);\r\n  console.log(newRecipe);\r\n\r\n  async function saveRecipe() {\r\n    console.log(\"new data saved\");\r\n\r\n    await API.graphql({\r\n      query: updateBreakfastMutation,\r\n      variables: { input: newRecipe },\r\n    });\r\n    /* \r\n    if (newRecipe.image) {\r\n      console.log(\"saving new img2\");\r\n      const image = await Storage.get(newRecipe.image);\r\n      console.log(image)\r\n      newRecipe.image = image;\r\n      console.log(image);\r\n    } */\r\n    console.log(newRecipe);\r\n    console.log(newRecipe.image);\r\n\r\n    alert(\"tallenenttu!\");\r\n  }\r\n\r\n  //Remove image\r\n\r\n  async function removeImg() {\r\n    const img = await Storage.get(loadedRecipe.image);\r\n\r\n    // image name/key is too long, must be shortened\r\n    const image = img.slice(0, 300);\r\n\r\n    await Storage.remove(image);\r\n    setLoadedRecipe({ ...newRecipe, image: \"\" });\r\n  }\r\n\r\n  console.log(loadedRecipe);\r\n\r\n  return (\r\n    <EditRecipeCard\r\n      loadedRecipe={loadedRecipe}\r\n      recipeHandler={recipeHandler}\r\n      ingHandler={ingHandler}\r\n      onChange={onChange}\r\n      removeImg={removeImg}\r\n      addIngHandler={addIngHandler}\r\n      add\r\n      saveRecipe={saveRecipe}\r\n      removeIngHandler={removeIngHandler}\r\n      changeIngHandler={changeIngHandler}\r\n      ingredients={ingredients}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js",[],["105","106"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\__AddRecipe.js",["107"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\config.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Pagination.js",["108"],"import React, { useState } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst Pagination = ({\r\n  nextToken,\r\n  setNextToken,\r\n  newNextToken,\r\n  setNewNextToken,\r\n  prevToken,\r\n  setPrevToken,\r\n}) => {\r\n  const getNext = () => {\r\n    console.log(\"get next\");\r\n    setPrevToken((prev) => [...prev, nextToken]);\r\n    setNextToken(newNextToken);\r\n    setNewNextToken(null);\r\n  };\r\n\r\n  const getPrev = () => {\r\n    // console.log(\"get previous\")\r\n    setNextToken(prevToken.pop());\r\n    setPrevToken([...prevToken]);\r\n    setNewNextToken(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Grid item xs={12} style={{ marginLeft: \"1rem\" }}>\r\n        <Button onClick={getPrev}>Edelliset 10</Button>\r\n        <Button onClick={getNext}>Seuraavat 10</Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n",{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":6,"column":3,"nodeType":"115","messageId":"116","endLine":6,"endColumn":7},{"ruleId":"117","severity":1,"message":"118","line":30,"column":6,"nodeType":"119","endLine":30,"endColumn":17,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":3,"nodeType":"115","messageId":"116","endLine":3,"endColumn":7},{"ruleId":"117","severity":1,"message":"121","line":40,"column":6,"nodeType":"119","endLine":40,"endColumn":8,"suggestions":"122"},{"ruleId":"113","severity":1,"message":"123","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"124","line":15,"column":10,"nodeType":"115","messageId":"116","endLine":15,"endColumn":25},{"ruleId":"113","severity":1,"message":"125","line":15,"column":27,"nodeType":"115","messageId":"116","endLine":15,"endColumn":45},{"ruleId":"113","severity":1,"message":"126","line":218,"column":9,"nodeType":"115","messageId":"116","endLine":218,"endColumn":20},{"ruleId":"117","severity":1,"message":"127","line":17,"column":6,"nodeType":"119","endLine":17,"endColumn":8,"suggestions":"128"},{"ruleId":"109","replacedBy":"129"},{"ruleId":"111","replacedBy":"130"},{"ruleId":"113","severity":1,"message":"123","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"131","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLunches'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has missing dependencies: 'category', 'fetchBreakfast', 'fetchDinner', 'fetchLunch', and 'fetchSnack'. Either include them or remove the dependency array.",["135"],"'useEffect' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","'authHandler' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBreakfast'. Either include it or remove the dependency array.",["136"],["132"],["133"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [fetchLunches, nextToken]",{"range":"143","text":"144"},"Update the dependencies array to be: [category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",{"range":"145","text":"146"},"Update the dependencies array to be: [fetchBreakfast]",{"range":"147","text":"148"},[871,882],"[fetchLunches, nextToken]",[991,993],"[category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",[632,634],"[fetchBreakfast]"]