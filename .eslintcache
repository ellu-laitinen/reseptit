[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"11"},{"size":175,"mtime":1610784139470,"results":"12","hashOfConfig":"13"},{"size":1122,"mtime":1617518271751,"results":"14","hashOfConfig":"13"},{"size":926,"mtime":1610784139451,"results":"15","hashOfConfig":"13"},{"size":893,"mtime":1617466146014,"results":"16","hashOfConfig":"13"},{"size":1665,"mtime":1617518281846,"results":"17","hashOfConfig":"13"},{"size":3052,"mtime":1617624870330,"results":"18","hashOfConfig":"13"},{"size":1590,"mtime":1617517677523,"results":"19","hashOfConfig":"13"},{"size":1133,"mtime":1617624258147,"results":"20","hashOfConfig":"13"},{"size":856,"mtime":1617517216772,"results":"21","hashOfConfig":"13"},{"size":1621,"mtime":1617517724703,"results":"22","hashOfConfig":"13"},{"size":1677,"mtime":1617517860893,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"15ilex8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["53","54"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",["55"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './NavBar.css'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    button: {\r\n        backgroundColor: 'lightblue'\r\n    }\r\n}));\r\n\r\nconst NavBar = () => {\r\n    \r\nconst classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n            <Toolbar className=\"toolbar\">\r\n            <div>LOGO</div>\r\n        <Typography variant=\"h6\" className={classes.title}>Ellun reseptipankki</Typography>\r\n       \r\n      \r\n        </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js",[],["56","57"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["58","59"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport AddRecipe from \"../../AddRecipe\";\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Breakfasts = () => {\r\n  const [breakfast, setBreakfast] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/breakfast\").then((response) => {\r\n      setBreakfast(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const removeHandler = (id) => {\r\n    console.log(id);\r\n\r\n    axios\r\n      .delete(\"http://localhost:3001/breakfast/\" + id)\r\n      .then(() => {\r\n        return axios.get(\"http://localhost:3001/breakfast\");\r\n      })\r\n      .then((response) => {\r\n        setBreakfast(response.data);\r\n      });\r\n  };\r\n\r\n  const recipeList = breakfast.map((item) => {\r\n    return (\r\n      <Grid item xs={12} sm={4}>\r\n        <RecipeCard\r\n          title={item.title}\r\n          img={item.img}\r\n          link={`${match.url}/${item.id}`}\r\n          remove={() => removeHandler(item.id)}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {recipeList}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breakfasts;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe.js",["60"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["61","62"],"import React, { useEffect, useState } from \"react\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\n\r\nimport FullRecipe from \"../FullRecipe\";\r\n\r\nconst Snacks = () => {\r\n  const [snack, setSnack] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/snacks\").then((response) => {\r\n      const snackList = response.data;\r\n      setSnack(snackList);\r\n    });\r\n  }, []);\r\n  const removeHandler = (id) => {\r\n    console.log(id);\r\n\r\n    axios\r\n      .delete(\"http://localhost:3001/snacks/\" + id)\r\n      .then(() => {\r\n        return axios.get(\"http://localhost:3001/snacks\");\r\n      })\r\n      .then((response) => {\r\n        setSnack(response.data);\r\n      });\r\n  };\r\n\r\n  const recipeList = snack.map((item) => {\r\n    return (\r\n      <Grid item xs={12} sm={4}>\r\n        <RecipeCard\r\n          title={item.title}\r\n          img={item.img}\r\n          link={`${match.url}/${item.id}`}\r\n          remove={()=> removeHandler(item.id)}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/:snacks/:postId`}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {recipeList}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js",["63"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["64","65"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport AddRecipe from \"../../AddRecipe\";\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:3001/lunch\").then((response) => {\r\n      const lunchList = response.data;\r\n      setLunch(lunchList);\r\n    });\r\n  }, []);\r\n  const removeHandler = (id) => {\r\n    console.log(id);\r\n\r\n    axios\r\n      .delete(\"http://localhost:3001/lunch/\" + id)\r\n      .then(() => {\r\n        return axios.get(\"http://localhost:3001/lunch\");\r\n      })\r\n      .then((response) => {\r\n        setLunch(response.data);\r\n      });\r\n  };\r\n\r\n  const recipeList = lunch.map((item) => {\r\n    return (\r\n      <Grid item xs={12} sm={4}>\r\n        <RecipeCard\r\n          title={item.title}\r\n          img={item.img}\r\n          link={`${match.url}/${item.id}`}\r\n          remove={()=> removeHandler(item.id)}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {recipeList}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["66","67"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport AddRecipe from \"../../AddRecipe\";\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  let match = useRouteMatch();\r\n  const category = \"dinner\";\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/${category}`).then((response) => {\r\n      const dinnerList = response.data;\r\n      setDinner(dinnerList);\r\n    });\r\n  }, []);\r\n  const removeHandler = (id) => {\r\n    console.log(id);\r\n\r\n    axios\r\n      .delete(`http://localhost:3001/${category}/` + id)\r\n      .then(() => {\r\n        return axios.get(`http://localhost:3001/${category}`);\r\n      })\r\n      .then((response) => {\r\n        setDinner(response.data);\r\n      });\r\n  };\r\n\r\n  const recipeList = dinner.map((item) => {\r\n    return (\r\n      <Grid item xs={12} sm={4}>\r\n        <RecipeCard\r\n          title={item.title}\r\n          img={item.img}\r\n          link={`${match.url}/${item.id}`}\r\n          remove={() => removeHandler(item.id)}\r\n        />\r\n      </Grid>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {recipeList}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":14},{"ruleId":"68","replacedBy":"76"},{"ruleId":"70","replacedBy":"77"},{"ruleId":"72","severity":1,"message":"78","line":3,"column":3,"nodeType":"74","messageId":"75","endLine":3,"endColumn":7},{"ruleId":"72","severity":1,"message":"79","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":17},{"ruleId":"72","severity":1,"message":"80","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":13},{"ruleId":"72","severity":1,"message":"78","line":4,"column":3,"nodeType":"74","messageId":"75","endLine":4,"endColumn":7},{"ruleId":"72","severity":1,"message":"81","line":11,"column":10,"nodeType":"74","messageId":"75","endLine":11,"endColumn":14},{"ruleId":"72","severity":1,"message":"82","line":3,"column":21,"nodeType":"74","messageId":"75","endLine":3,"endColumn":34},{"ruleId":"72","severity":1,"message":"78","line":3,"column":3,"nodeType":"74","messageId":"75","endLine":3,"endColumn":7},{"ruleId":"72","severity":1,"message":"79","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":17},{"ruleId":"72","severity":1,"message":"78","line":3,"column":3,"nodeType":"74","messageId":"75","endLine":3,"endColumn":7},{"ruleId":"72","severity":1,"message":"79","line":11,"column":8,"nodeType":"74","messageId":"75","endLine":11,"endColumn":17},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["83"],["84"],"'Link' is defined but never used.","'AddRecipe' is defined but never used.","'Typography' is defined but never used.","'Card' is defined but never used.","'useRouteMatch' is defined but never used.","no-global-assign","no-unsafe-negation"]