[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js":"17","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js":"18","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\__AddRecipe.js":"19","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\config.js":"20","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Pagination.js":"21","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\RemoveModal.js":"22","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\ProtectedRoute.js":"23","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\Login.js":"24","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\AllRecipes.js":"25","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\RemoveRecipe.js":"26"},{"size":277,"mtime":1617650206621,"results":"27","hashOfConfig":"28"},{"size":1400,"mtime":1630598571863,"results":"29","hashOfConfig":"28"},{"size":852,"mtime":1630599253607,"results":"30","hashOfConfig":"28"},{"size":2511,"mtime":1630596274076,"results":"31","hashOfConfig":"28"},{"size":2854,"mtime":1630591777624,"results":"32","hashOfConfig":"28"},{"size":2698,"mtime":1630591816256,"results":"33","hashOfConfig":"28"},{"size":2896,"mtime":1630591796221,"results":"34","hashOfConfig":"28"},{"size":924,"mtime":1628320591435,"results":"35","hashOfConfig":"28"},{"size":3321,"mtime":1630591810892,"results":"36","hashOfConfig":"28"},{"size":2473,"mtime":1630599249158,"results":"37","hashOfConfig":"28"},{"size":3937,"mtime":1630599249287,"results":"38","hashOfConfig":"28"},{"size":3843,"mtime":1628413823116,"results":"39","hashOfConfig":"28"},{"size":1315,"mtime":1630599674989,"results":"40","hashOfConfig":"28"},{"size":7266,"mtime":1629918270578,"results":"41","hashOfConfig":"28"},{"size":7219,"mtime":1630593827776,"results":"42","hashOfConfig":"28"},{"size":2260,"mtime":1630595379161,"results":"43","hashOfConfig":"28"},{"size":4109,"mtime":1627818355985,"results":"44","hashOfConfig":"28"},{"size":3823,"mtime":1628415606955,"results":"45","hashOfConfig":"28"},{"size":3028,"mtime":1627749137341,"results":"46","hashOfConfig":"28"},{"size":92,"mtime":1627814659450,"results":"47","hashOfConfig":"28"},{"size":848,"mtime":1627816066276,"results":"48","hashOfConfig":"28"},{"size":1546,"mtime":1628410266429,"results":"49","hashOfConfig":"28"},{"size":2123,"mtime":1630596203979,"results":"50","hashOfConfig":"28"},{"size":551,"mtime":1629917204323,"results":"51","hashOfConfig":"28"},{"size":3622,"mtime":1630594259969,"results":"52","hashOfConfig":"28"},{"size":5223,"mtime":1630594309435,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"15ilex8",{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"56"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"56"},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["123","124"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["125","126","127","128","129","130"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { withAuthenticator, AmplifySignOut } from \"@aws-amplify/ui-react\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport Breakfasts from \"./Recipes/Breakfasts/Breakfasts\";\r\nimport Snacks from \"./Recipes/Snacks/Snacks\";\r\nimport Lunch from \"./Recipes/Lunch/Lunch\";\r\nimport Dinner from \"./Recipes/Dinner/Dinner\";\r\nimport AddRecipe from \"./Recipes/AddRecipe/AddRecipe\";\r\nimport Login from \"./components/Login\";\r\n\r\nimport theme from \"./Theme/theme\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport AllRecipes from \"./components/AllRecipes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/breakfast\" />\r\n          </Route>\r\n          <Route path=\"/breakfast\" exact component={Breakfasts}></Route>\r\n          <Route path=\"/snacks\" exact component={Snacks}></Route>\r\n          <Route path=\"/lunch\" exact component={Lunch}></Route>\r\n          <Route path=\"/dinner\" exact component={Dinner}></Route>\r\n          <Route path=\"/admin\" component={ProtectedRoute}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["131"],"import React, { useEffect, useState } from \"react\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport {\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listSnacks } from \"../../graphql/queries\";\r\nimport { deleteSnack as deleteSnacksMutation } from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { Typography, Grid } from \"@material-ui/core\";\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Snacks = () => {\r\n  const [snacks, setSnacks] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchSnacks() {\r\n      const apiData = await API.graphql({\r\n        query: listSnacks,\r\n        variables: { nextToken, limit: 10 },\r\n      });\r\n      setNewNextToken(apiData.data.listSnacks.nextToken);\r\n      const snackFromAPI = apiData.data.listSnacks.items;\r\n      await Promise.all(\r\n        snackFromAPI.map(async (recipe) => {\r\n          if (recipe.image) {\r\n            const image = await Storage.get(recipe.image);\r\n            recipe.image = image;\r\n            //      console.log(recipe.image);\r\n          }\r\n        })\r\n      );\r\n      setSnacks(snackFromAPI);\r\n      console.log(apiData.data.listSnacks.items);\r\n    }\r\n    fetchSnacks();\r\n  }, [nextToken]);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/:category/:postId`}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Ilta- ja välipalat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {snacks.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} md={6} lg={4} key={item.id}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {/*       <Grid item xs={12}>\r\n                <AddRecipe category={\"välipalainen\"} />\r\n              </Grid> */}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["132","133"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport { deleteLunch as deleteLunchMutation } from \"../../graphql/mutations\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\n\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n  console.log(match);\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, [nextToken]);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({\r\n      query: listLunchs,\r\n      variables: { nextToken, limit: 10 },\r\n    });\r\n    setNewNextToken(apiData.data.listLunchs.nextToken);\r\n    const lunchFromAPI = apiData.data.listLunchs.items;\r\n    console.log(apiData.data.listLunchs.items);\r\n    await Promise.all(\r\n      lunchFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setLunch(lunchFromAPI);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Lounaat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} md={6} lg={4} key={item.id}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["134","135"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listDinners } from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { deleteDinner as deleteDinnerMutation } from \"../../graphql/mutations\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchDinners() {\r\n      const apiData = await API.graphql({\r\n        query: listDinners,\r\n        variables: { nextToken, limit: 10 },\r\n      });\r\n      setNewNextToken(apiData.data.listDinners.nextToken);\r\n      const dinnerFromAPI = apiData.data.listDinners.items;\r\n      await Promise.all(\r\n        dinnerFromAPI.map(async (recipe) => {\r\n          if (recipe.image) {\r\n            const image = await Storage.get(recipe.image);\r\n            recipe.image = image;\r\n            //      console.log(recipe.image);\r\n          }\r\n        })\r\n      );\r\n      setDinner(dinnerFromAPI);\r\n      //  console.log(breakfastFromAPI);\r\n    }\r\n    fetchDinners();\r\n  }, [nextToken]);\r\n  // DELETE dinner\r\n  console.log(dinner);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Päiväruuat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n              </Grid>\r\n              {dinner.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} md={6} lg={4} key={item.id}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {/*     <Grid item xs={12}>\r\n                <AddRecipe category={\"päiväruoca\"} />\r\n              </Grid> */}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js",["136"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { green, deepPurple, purple } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: \"light\",\r\n  shape: {\r\n    borderRadius: 0,\r\n  },\r\n});\r\n\r\ntheme.overrides = {\r\n  muiButton: {\r\n    outlined: {\r\n      backgroundColor: \"green\",\r\n      color: \"black\",\r\n    },\r\n\r\n    colorSecondary: {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  MuiCard: {\r\n    root: {\r\n      backgroundColor: purple[100],\r\n      margin: \"1rem\",\r\n      padding: \"1rem\",\r\n      borderRadius: \"10px\",\r\n    },\r\n  },\r\n  MuiTextField: {\r\n    root: {\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n  MuiAppBar: {\r\n    root: {\r\n      backgroundColor: green[100],\r\n      marginBottom: \"2rem\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  MuiTypography: {\r\n    h5: {\r\n      marginLeft: \"2rem\",\r\n    },\r\n    h4: {\r\n      padding: \"1rem\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["137"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport { listBreakfasts } from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { deleteBreakfast as deleteBreakfastMutation } from \"../../graphql/mutations\";\r\n\r\nimport FullRecipe from \"../FullRecipe/FullRecipe\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport Pagination from \"../../Pagination\";\r\n\r\nconst Breakfasts = () => {\r\n  const [breakfast, setBreakfast] = useState([]);\r\n\r\n  //TOKENS\r\n  const [nextToken, setNextToken] = useState(undefined);\r\n  const [newNextToken, setNewNextToken] = useState();\r\n  const [prevToken, setPrevToken] = useState([]);\r\n\r\n  let match = useRouteMatch();\r\n\r\n  // get all brekfasts\r\n  useEffect(() => {\r\n    async function fetchBreakfasts() {\r\n      const apiData = await API.graphql({\r\n        query: listBreakfasts,\r\n        variables: { nextToken, limit: 10 },\r\n      });\r\n      setNewNextToken(apiData.data.listBreakfasts.nextToken);\r\n      // console.log(apiData.data.listBreakfasts.nextToken)\r\n      const breakfastFromAPI = apiData.data.listBreakfasts.items;\r\n      //   console.log(breakfastFromAPI)\r\n      await Promise.all(\r\n        breakfastFromAPI.map(async (recipe) => {\r\n          if (recipe.image) {\r\n            const image = await Storage.get(recipe.image);\r\n            recipe.image = image;\r\n            console.log(recipe.image);\r\n            console.log(image);\r\n          }\r\n        })\r\n      );\r\n      setBreakfast(breakfastFromAPI);\r\n    }\r\n    fetchBreakfasts();\r\n  }, [nextToken]); // re-renders when nextToken changes\r\n\r\n  console.log(breakfast);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:category/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"h5\">Aamupalat</Typography>\r\n                <Pagination\r\n                  nextToken={nextToken}\r\n                  setNextToken={setNextToken}\r\n                  newNextToken={newNextToken}\r\n                  setNewNextToken={setNewNextToken}\r\n                  prevToken={prevToken}\r\n                  setPrevToken={setPrevToken}\r\n                />\r\n                {/*      <Grid item xs={12} style={{ marginLeft: \"1rem\" }}>\r\n                  <Button onClick={getPrev}>Edelliset 10</Button>\r\n                  <Button onClick={getNext}>Seuraavat 10</Button>\r\n                </Grid> */}\r\n              </Grid>\r\n              {breakfast.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} md={6} lg={4} key={item.id}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              {/*     <Grid item xs={12}>\r\n                <AddRecipe category=\"aamupala\" />\r\n              </Grid> */}\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breakfasts;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipe.js",["138"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useParams,\r\n  Switch,\r\n  useRouteMatch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\n\r\nimport * as queries from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\n\r\nimport EditRecipe from \"../EditRecipe/EditRecipe\";\r\nimport FullRecipeCard from \"./FullRecipeCard\";\r\n\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport RemoveModal from \"../../components/RemoveModal\";\r\nconst FullRecipe = () => {\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  let match = useRouteMatch();\r\n\r\n  // useParams checks the parameters of the URL that match,\r\n  // e.g.  /:category/:postId\r\n  let { postId, category } = useParams();\r\n  console.log(category);\r\n\r\n  // try switch case??\r\n  useEffect(() => {\r\n    if (category === \"breakfast\") {\r\n      console.log(category);\r\n      fetchBreakfast();\r\n    }\r\n    if (category === \"dinner\") {\r\n      fetchDinner();\r\n    }\r\n    if (category === \"lunch\") {\r\n      fetchLunch();\r\n    }\r\n    if (category === \"snacks\") {\r\n      fetchSnack();\r\n    }\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(recipeFromAPI);\r\n  }\r\n\r\n  async function fetchDinner() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getDinner,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getDinner;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getDinner);\r\n  }\r\n\r\n  async function fetchLunch() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getLunch,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getLunch;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getLunch);\r\n    console.log(apiData.data.getLunch);\r\n  }\r\n\r\n  async function fetchSnack() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getSnack,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getSnack;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getSnack);\r\n    console.log(apiData.data.getSnack);\r\n  }\r\n\r\n  console.log(match.url);\r\n  return (\r\n    <>\r\n      <Modal open={showModal} onClose={() => setShowModal(false)}>\r\n        <>\r\n          <RemoveModal />\r\n        </>\r\n      </Modal>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/edit/:category/:id`}>\r\n            <EditRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <FullRecipeCard\r\n              category={category}\r\n              link={match.url}\r\n              loadedRecipe={loadedRecipe}\r\n              remove={() => setShowModal(true)}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FullRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",["139","140","141"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipe.js",["142","143","144","145","146","147","148","149"],"import React, { useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport {\r\n  createBreakfast as createBreakfastMutation,\r\n  createDinner as createDinnerMutation,\r\n  createLunch as createLunchMutation,\r\n  createSnack as createSnackMutation,\r\n} from \"../../graphql/mutations\";\r\nimport AddRecipeCard from \"./AddRecipeCard\";\r\nimport { Select, MenuItem, FormControl } from \"@material-ui/core\";\r\nimport Login from \"../../components/Login\";\r\nimport AllRecipes from \"../../components/AllRecipes\";\r\n/* import { username, password } from \"./config\"; */\r\n\r\nconst AddRecipe = ({ token }) => {\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [credentials, setCredentials] = useState(null);\r\n\r\n  const [recipe, setRecipe] = useState([]);\r\n  const [ingredients, setIngredients] = useState(\"\");\r\n\r\n  const [recipeCreator, setRecipeCreator] = useState(null);\r\n  console.log(\"ADD RECIPE\");\r\n  console.log(token);\r\n\r\n  // FORM\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: ingredients,\r\n    instructions: \"\",\r\n  };\r\n\r\n  const [recipeData, setRecipeData] = useState(initialState);\r\n  console.log(recipeData);\r\n\r\n  const saveData = ({ name, value }) => {\r\n    setRecipeData({\r\n      ...recipeData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  console.log(recipeData);\r\n\r\n  //add ingredients\r\n  const changeIngHandler = (e) => {\r\n    setIngredients({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const addIng = (e) => {\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...recipeData.ingredients, ingredients.ingredients],\r\n    });\r\n    setIngredients({ value: \"\" });\r\n  };\r\n\r\n  // add image\r\n  async function onChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    const file = e.target.files[0];\r\n    setRecipeData({\r\n      ...recipeData,\r\n      image: file.name,\r\n    });\r\n    setImgFile(URL.createObjectURL(e.target.files[0]));\r\n    await Storage.put(file.name, file);\r\n    /*     fetchRecipes(); */\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setRecipeData({\r\n      ...recipeData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const removeIng = (id) => {\r\n    console.log(\"remove ing\");\r\n    console.log(id);\r\n    const newIngArray = recipeData.ingredients.filter((item) => item !== id);\r\n    console.log(newIngArray);\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngArray],\r\n    });\r\n  };\r\n\r\n  async function createBreakfast() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedBreakfast = await API.graphql({\r\n      query: createBreakfastMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedBreakfast);\r\n    setRecipe([...recipe, savedBreakfast.data.createBreakfast]);\r\n\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n\r\n    console.log(recipeData);\r\n  }\r\n\r\n  async function createDinner() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedDinner = await API.graphql({\r\n      query: createDinnerMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedDinner);\r\n    setRecipe([...recipe, savedDinner.data.createDinner]);\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n    console.log(recipeData);\r\n  }\r\n\r\n  async function createLunch() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedLunch = await API.graphql({\r\n      query: createLunchMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedLunch);\r\n    setRecipe([...recipe, savedLunch.data.createLunch]);\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n    console.log(recipeData);\r\n  }\r\n  async function createSnack() {\r\n    // required fields\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n\r\n    let savedSnack = await API.graphql({\r\n      query: createSnackMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      console.log(recipeData.image);\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n      console.log(image);\r\n    }\r\n\r\n    console.log(recipeData.image);\r\n    console.log(savedSnack);\r\n    setRecipe([...recipe, savedSnack.data.createSnack]);\r\n    // empty the form fields\r\n    console.log(\"clear fields\");\r\n\r\n    setRecipeData({ title: \"\", ingredients: \"\", instructions: \"\" });\r\n    setImgFile(null);\r\n    console.log(recipeData);\r\n  }\r\n\r\n  const selectCategory = (e) => {\r\n    setRecipeCreator(e.target.value);\r\n  };\r\n  console.log(recipeCreator);\r\n\r\n  return (\r\n    <>\r\n      {token ? (\r\n        <AddRecipeCard\r\n          recipeData={recipeData}\r\n          setRecipeData={setRecipeData}\r\n          createRecipe={\r\n            recipeCreator === 1 ? (\r\n              createBreakfast\r\n            ) : recipeCreator === 2 ? (\r\n              createLunch\r\n            ) : recipeCreator === 3 ? (\r\n              createSnack\r\n            ) : recipeCreator === 4 ? (\r\n              createDinner\r\n            ) : (\r\n              <h3>Food category doesn't exist, please check path</h3>\r\n            )\r\n          }\r\n          category={\r\n            <FormControl variant=\"outlined\" size=\"small\">\r\n              <Select onChange={selectCategory}>\r\n                <MenuItem value={1}>Aamupala</MenuItem>\r\n                <MenuItem value={2}>Lounas</MenuItem>\r\n                <MenuItem value={3}>Välipala</MenuItem>\r\n                <MenuItem value={4}>Päivällinen</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          }\r\n          addIng={addIng}\r\n          changeIngHandler={changeIngHandler}\r\n          onChange={onChange}\r\n          recipeHandler={recipeHandler}\r\n          ingredients={ingredients}\r\n          removeIng={removeIng}\r\n          image={imgFile}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipe.js",["150"],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\nimport * as queries from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  updateBreakfast as updateBreakfastMutation,\r\n  updateDinner as updateDinnerMutation,\r\n  updateLunch as updateLunchMutation,\r\n  updateSnack as updateSnackMutation,\r\n} from \"../../graphql/mutations\";\r\nimport EditRecipeCard from \"./EditRecipeCard\";\r\n\r\nconst EditRecipe = ({ token }) => {\r\n  let { category, id } = useParams();\r\n  const { data } = useParams();\r\n  console.log(data);\r\n  console.log(category);\r\n  const match = useRouteMatch();\r\n  console.log(match);\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredient, setNewIngredient] = useState(\"\");\r\n  const [mutation, setMutation] = useState(null);\r\n\r\n  console.log(window.location.href);\r\n  console.log(\"\");\r\n\r\n  console.log(id);\r\n  /*   useEffect(() => {\r\n    fetchBreakfast();\r\n  }, []); */\r\n  useEffect(() => {\r\n    try {\r\n      if (category === \"breakfast\") {\r\n        console.log(\"this is a breakfast recipe\");\r\n        setMutation(updateBreakfastMutation);\r\n        fetchBreakfast();\r\n      }\r\n      if (category === \"lunch\") {\r\n        console.log(\"this is lunch\");\r\n        setMutation(updateLunchMutation);\r\n        fetchLunch();\r\n      }\r\n      if (category === \"dinner\") {\r\n        console.log(\"this is dinnah\");\r\n        setMutation(updateDinnerMutation);\r\n        fetchDinner();\r\n      }\r\n      if (category === \"snacks\") {\r\n        console.log(\"this is snacks\");\r\n        setMutation(updateSnackMutation);\r\n        fetchSnack();\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error happened\", err);\r\n    }\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: id },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n\r\n    /*    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    } */\r\n    setLoadedRecipe(recipeFromAPI);\r\n    setIngredients(recipeFromAPI.ingredients);\r\n  }\r\n  async function fetchDinner() {\r\n    console.log(\"fetching dinners\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getDinner,\r\n      variables: { id: id },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getDinner;\r\n\r\n    /*    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    } */\r\n    setLoadedRecipe(recipeFromAPI);\r\n    setIngredients(recipeFromAPI.ingredients);\r\n  }\r\n  async function fetchLunch() {\r\n    console.log(\"fetching lunches\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getLunch,\r\n      variables: { id: id },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getLunch;\r\n\r\n    /*    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    } */\r\n    setLoadedRecipe(recipeFromAPI);\r\n    setIngredients(recipeFromAPI.ingredients);\r\n  }\r\n  async function fetchSnack() {\r\n    console.log(\"fetching snacks\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getSnack,\r\n      variables: { id: id },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getSnack;\r\n\r\n    /*    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    } */\r\n    setLoadedRecipe(recipeFromAPI);\r\n    setIngredients(recipeFromAPI.ingredients);\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setLoadedRecipe({\r\n      ...loadedRecipe,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const newRecipe = {\r\n    id: loadedRecipe.id,\r\n    title: loadedRecipe.title,\r\n    ingredients: ingredients,\r\n    instructions: loadedRecipe.instructions,\r\n    image: loadedRecipe.image,\r\n  };\r\n  console.log(newRecipe);\r\n\r\n  async function onChange(e) {\r\n    console.log(loadedRecipe.image);\r\n\r\n    if (!e.target.files[0]) return;\r\n    console.log(\"saving new image1\");\r\n    const file = e.target.files[0];\r\n    setLoadedRecipe({ ...newRecipe, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    /*      const img = await Storage.get(key.key)  */\r\n  }\r\n\r\n  const ingHandler = (e, index) => {\r\n    loadedRecipe.ingredients[index] = e.target.value;\r\n\r\n    console.log(index);\r\n    setIngredients([...loadedRecipe.ingredients]);\r\n  };\r\n\r\n  const saveData = ({ name, value }) => {\r\n    setNewIngredient({\r\n      ...newIngredient,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const addIngHandler = () => {\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...ingredients, newIngredient.ingredient],\r\n    });\r\n    setIngredients([...ingredients, newIngredient.ingredient]);\r\n  };\r\n\r\n  const changeIngHandler = (e) => {\r\n    console.log(\"changeIngHandler\");\r\n    setNewIngredient({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const removeIngHandler = (id) => {\r\n    console.log(\"remove\");\r\n\r\n    console.log(id);\r\n    const newIngArray = ingredients.filter((item) => item !== id);\r\n    console.log(newIngArray);\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngArray],\r\n    });\r\n    setIngredients(newIngArray);\r\n  };\r\n\r\n  console.log(\"newingredient\");\r\n  console.log(newIngredient);\r\n  console.log(\"ingredients\");\r\n  console.log(ingredients);\r\n  console.log(newRecipe);\r\n\r\n  async function saveRecipe() {\r\n    console.log(\"new data saved\");\r\n\r\n    await API.graphql({\r\n      query: mutation,\r\n      variables: { input: newRecipe },\r\n    });\r\n    /* \r\n    if (newRecipe.image) {\r\n      console.log(\"saving new img2\");\r\n      const image = await Storage.get(newRecipe.image);\r\n      console.log(image)\r\n      newRecipe.image = image;\r\n      console.log(image);\r\n    } */\r\n    console.log(newRecipe);\r\n    console.log(newRecipe.image);\r\n\r\n    alert(\"tallenenttu!\");\r\n  }\r\n\r\n  //Remove image\r\n\r\n  async function removeImg() {\r\n    const img = await Storage.get(loadedRecipe.image);\r\n\r\n    // image name/key is too long, must be shortened\r\n    const image = img.slice(0, 300);\r\n\r\n    await Storage.remove(image);\r\n    setLoadedRecipe({ ...newRecipe, image: \"\" });\r\n  }\r\n\r\n  console.log(loadedRecipe);\r\n\r\n  return (\r\n    <>\r\n      {token ? (\r\n        <EditRecipeCard\r\n          loadedRecipe={loadedRecipe}\r\n          recipeHandler={recipeHandler}\r\n          ingHandler={ingHandler}\r\n          onChange={onChange}\r\n          removeImg={removeImg}\r\n          addIngHandler={addIngHandler}\r\n          add\r\n          saveRecipe={saveRecipe}\r\n          removeIngHandler={removeIngHandler}\r\n          changeIngHandler={changeIngHandler}\r\n          ingredients={ingredients}\r\n        />\r\n      ) : (\r\n        <h2>You are unauthorised</h2>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe\\FullRecipeCard.js",["151","152","153","154"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Button,\r\n  Typography,\r\n  makeStyles,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  link: {\r\n    color: \"black\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  button: {\r\n    textDecoration: \"none\",\r\n    marginTop: \"2rem\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n});\r\n\r\nconst FullRecipeCard = ({ loadedRecipe, link, remove, category }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const instructions = loadedRecipe.instructions;\r\n  return (\r\n    <Card>\r\n      <Grid container direction=\"column\" spacing={3}>\r\n        <Grid container>\r\n          <Grid item xs={9} sm={11}>\r\n            <Typography variant=\"h4\">{loadedRecipe.title}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          {loadedRecipe.image ? (\r\n            <Grid item xs={12} md={6}>\r\n              <img\r\n                src={loadedRecipe.image}\r\n                alt={loadedRecipe.title}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </Grid>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography>Ainesosat:</Typography>\r\n            <ul style={{ listStyleType: \"circle\" }}>\r\n              {loadedRecipe &&\r\n                loadedRecipe.ingredients.map((i) => (\r\n                  <>\r\n                    <li key={i}>{i}</li>\r\n                    <Divider style={{ width: \"80%\", marginBottom: \"0.5rem\" }} />\r\n                  </>\r\n                ))}\r\n            </ul>\r\n            <Typography></Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>Ohje:</Typography>\r\n          <Typography>\r\n            {instructions &&\r\n              instructions.split(\"\\n\").map((item) => {\r\n                return (\r\n                  <span>\r\n                    {item}\r\n                    <br></br>\r\n                  </span>\r\n                );\r\n              })}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FullRecipeCard;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\AddRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\EditRecipe\\EditRecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\__AddRecipe.js",["155"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\AddRecipe\\config.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Pagination.js",["156"],"import React, { useState } from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nconst Pagination = ({\r\n  nextToken,\r\n  setNextToken,\r\n  newNextToken,\r\n  setNewNextToken,\r\n  prevToken,\r\n  setPrevToken,\r\n}) => {\r\n  const getNext = () => {\r\n    console.log(\"get next\");\r\n    setPrevToken((prev) => [...prev, nextToken]);\r\n    setNextToken(newNextToken);\r\n    setNewNextToken(null);\r\n  };\r\n\r\n  const getPrev = () => {\r\n    // console.log(\"get previous\")\r\n    setNextToken(prevToken.pop());\r\n    setPrevToken([...prevToken]);\r\n    setNewNextToken(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Grid item xs={12} style={{ marginLeft: \"1rem\" }}>\r\n        <Button onClick={getPrev}>Edelliset 10</Button>\r\n        <Button onClick={getNext}>Seuraavat 10</Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\RemoveModal.js",["157","158","159"],"import React, { useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { API, Storage } from \"aws-amplify\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { deleteBreakfast as deleteBreakfastMutation } from \"../graphql/mutations\";\r\n\r\nconst RemoveModal = ({ open, close }) => {\r\n  const recipe = useParams();\r\n  const history = useHistory();\r\n  const id = recipe.postId;\r\n  console.log(id);\r\n\r\n  const recipeId = id;\r\n  const [breakfast, setBreakfast] = useState();\r\n\r\n  async function deleteBreakfast({ id }) {\r\n    // filter: take every recipe from the existing array ->\r\n    // check if the id's match to the id of the chosen recipe ->\r\n    // if it's NOT a match, it's kept in the new array\r\n    /*    const newBreakfastArray = breakfast.filter((recipe) => recipe.id !== id);\r\n    setBreakfast(newBreakfastArray); */\r\n    //removes recipe from database\r\n    await API.graphql({\r\n      query: deleteBreakfastMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  const remove = (id) => {\r\n    console.log(\"removing...\", id);\r\n    if (recipe.category === \"breakfast\") {\r\n      console.log(\"breakfast recipe\", recipe);\r\n      deleteBreakfast(id);\r\n      history.replace(\"/\");\r\n    } else {\r\n      console.log(\"what's this category?\");\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <h2>Poista resepti?</h2>\r\n      <Button onClick={() => remove(recipeId)}>poista</Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RemoveModal;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\ProtectedRoute.js",["160","161"],"import React, { useState, useEffect } from \"react\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport {\r\n  Route,\r\n  Redirect,\r\n  Link,\r\n  Switch,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport AddRecipe from \"../Recipes/AddRecipe/AddRecipe\";\r\nimport AllRecipes from \"./AllRecipes\";\r\nimport EditRecipe from \"../Recipes/EditRecipe/EditRecipe\";\r\n\r\nconst ProtectedRoute = () => {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [token, setToken] = useState(false);\r\n  async function signIn() {\r\n    try {\r\n      console.log(\"signing in?\");\r\n      const user = await Auth.signIn(username, password);\r\n\r\n      if (user) {\r\n        console.log(\"recognised\");\r\n        setToken(true);\r\n      } else {\r\n        console.log(\"unknown user\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error signing in\", error);\r\n    }\r\n  }\r\n\r\n  /*   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      let user = null;\r\n      try {\r\n        user = await Auth.currentAuthenticatedUser();\r\n        if (user) {\r\n          setIsAuthenticated(true);\r\n        }\r\n      } catch (e) {\r\n        setIsAuthenticated(false);\r\n      }\r\n    })();\r\n  }); */\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          {token === true ? (\r\n            <>\r\n              <Link to=\"/add\">Lisää resepti</Link>\r\n              <Link to=\"/delete\">Poista reseptejä</Link>\r\n              <Route path=\"/add\">\r\n                <AddRecipe token={token} />\r\n              </Route>\r\n              <Route path=\"/delete\">\r\n                <AllRecipes token={token} />\r\n              </Route>\r\n              <Route path=\"/edit/:category/:id\">\r\n                <EditRecipe token={token} />\r\n              </Route>\r\n            </>\r\n          ) : (\r\n            <Login\r\n              setUsername={setUsername}\r\n              setPassword={setPassword}\r\n              signIn={signIn}\r\n            />\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\Login.js",["162"],"import React, { useState } from \"react\";\r\n\r\nconst Login = ({ setUsername, setPassword, signIn }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"username\"\r\n        name=\"username\"\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      ></input>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"salasana\"\r\n        name=\"password\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      ></input>\r\n      <button onClick={signIn}>kirjaudu</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\AllRecipes.js",["163","164","165","166","167","168","169"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  listBreakfasts,\r\n  listDinners,\r\n  listLunchs,\r\n  listSnacks,\r\n} from \"../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  deleteBreakfast as deleteBreakfastMutation,\r\n  deleteDinner as deleteDinnerMutation,\r\n  deleteLunch as deleteLunchMutation,\r\n  deleteSnack as deleteSnackMutation,\r\n} from \"../graphql/mutations\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport RemoveRecipe from \"./RemoveRecipe\";\r\n\r\nconst AllRecipes = ({ token }) => {\r\n  const [breakfast, setBreakfast] = useState([]);\r\n  const [dinner, setDinner] = useState([]);\r\n  const [lunch, setLunch] = useState([]);\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchBreakfasts();\r\n    fetchSnacks();\r\n    fetchDinners();\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchBreakfasts() {\r\n    const apiData = await API.graphql({\r\n      query: listBreakfasts,\r\n    });\r\n\r\n    // console.log(apiData.data.listBreakfasts.nextToken)\r\n    const breakfastFromAPI = apiData.data.listBreakfasts.items;\r\n    //   console.log(breakfastFromAPI)\r\n    await Promise.all(\r\n      breakfastFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          console.log(recipe.image);\r\n          console.log(image);\r\n        }\r\n      })\r\n    );\r\n    setBreakfast(breakfastFromAPI);\r\n  }\r\n\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({\r\n      query: listDinners,\r\n    });\r\n\r\n    const dinnerFromAPI = apiData.data.listDinners.items;\r\n    await Promise.all(\r\n      dinnerFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setDinner(dinnerFromAPI);\r\n\r\n    //  console.log(breakfastFromAPI);\r\n  }\r\n\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({\r\n      query: listSnacks,\r\n    });\r\n\r\n    const snackFromAPI = apiData.data.listSnacks.items;\r\n    await Promise.all(\r\n      snackFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setSnacks(snackFromAPI);\r\n    console.log(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({\r\n      query: listLunchs,\r\n    });\r\n\r\n    const lunchFromAPI = apiData.data.listLunchs.items;\r\n    console.log(apiData.data.listLunchs.items);\r\n    await Promise.all(\r\n      lunchFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setLunch(lunchFromAPI);\r\n  }\r\n\r\n  console.log(category);\r\n  return (\r\n    <div>\r\n      {token ? (\r\n        <RemoveRecipe\r\n          breakfast={breakfast}\r\n          setBreakfast={setBreakfast}\r\n          lunch={lunch}\r\n          setLunch={setLunch}\r\n          dinner={dinner}\r\n          setDinner={setDinner}\r\n          snacks={snacks}\r\n          setSnacks={setSnacks}\r\n          category={category}\r\n        />\r\n      ) : (\r\n        <p>you are unauthorised!</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllRecipes;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\components\\RemoveRecipe.js",["170","171","172","173","174","175","176","177"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  useHistory,\r\n  useParams,\r\n  Switch,\r\n  useRouteMatch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  listBreakfasts,\r\n  listDinners,\r\n  listLunchs,\r\n  listSnacks,\r\n} from \"../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  deleteBreakfast as deleteBreakfastMutation,\r\n  deleteDinner as deleteDinnerMutation,\r\n  deleteLunch as deleteLunchMutation,\r\n  deleteSnack as deleteSnacksMutation,\r\n} from \"../graphql/mutations\";\r\nimport EditRecipe from \"../Recipes/EditRecipe/EditRecipe\";\r\n\r\nconst RemoveRecipe = ({\r\n  breakfast,\r\n  setBreakfast,\r\n  lunch,\r\n  setLunch,\r\n  snacks,\r\n  setSnacks,\r\n  dinner,\r\n  setDinner,\r\n  category,\r\n}) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n  async function deleteBreakfast({ id }) {\r\n    console.log(\"remove\", id);\r\n    if (window.confirm(\"poista resepti?\")) {\r\n      const newBreakfastArray = breakfast.filter((recipe) => recipe.id !== id);\r\n      setBreakfast(newBreakfastArray);\r\n      //removes recipe from database\r\n      await API.graphql({\r\n        query: deleteBreakfastMutation,\r\n        variables: { input: { id } },\r\n      });\r\n    } else {\r\n      console.log(\"not removed\");\r\n    }\r\n  }\r\n  async function deleteSnack({ id }) {\r\n    if (window.confirm(\"poista resepti?\")) {\r\n      const newSnackArray = snacks.filter((recipe) => recipe.id !== id);\r\n      setSnacks(newSnackArray);\r\n      await API.graphql({\r\n        query: deleteSnacksMutation,\r\n        variables: { input: { id } },\r\n      });\r\n    } else {\r\n      console.log(\"not removed\");\r\n    }\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    if (window.confirm(\"poista resepti?\")) {\r\n      const newLunchArray = lunch.filter((recipe) => recipe.id !== id);\r\n      setLunch(newLunchArray);\r\n      await API.graphql({\r\n        query: deleteLunchMutation,\r\n        variables: { input: { id } },\r\n      });\r\n    } else {\r\n      console.log(\"not removed\");\r\n    }\r\n  }\r\n\r\n  async function deleteDinner({ id }) {\r\n    if (window.confirm(\"poista resepti?\")) {\r\n      const newDinnerArray = dinner.filter((recipe) => recipe.id !== id);\r\n      setDinner(newDinnerArray);\r\n      await API.graphql({\r\n        query: deleteDinnerMutation,\r\n        variables: { input: { id } },\r\n      });\r\n    } else {\r\n      console.log(\"not removed\");\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/edit/:category/:id`}>\r\n            <EditRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <div>\r\n              {breakfast.map((i) => (\r\n                <li>\r\n                  {i.title}{\" \"}\r\n                  <Button>\r\n                    <DeleteOutline onClick={() => deleteBreakfast(i)} />\r\n                  </Button>\r\n                  <Button\r\n                    /*    className={classes.button} */\r\n                    onClick={() => history.push(`/edit/breakfast/${i.id}`)}\r\n                  >\r\n                    {\" \"}\r\n                    Muokkaa <EditOutlinedIcon />\r\n                  </Button>\r\n                </li>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              {lunch.map((i) => (\r\n                <li>\r\n                  {i.title}{\" \"}\r\n                  <Button>\r\n                    <DeleteOutline onClick={() => deleteLunch(i)} />\r\n                  </Button>\r\n                  <Button\r\n                    /*    className={classes.button} */\r\n                    onClick={() => history.push(`/edit/lunch/${i.id}`)}\r\n                  >\r\n                    {\" \"}\r\n                    Muokkaa <EditOutlinedIcon />\r\n                  </Button>\r\n                </li>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              {snacks.map((i) => (\r\n                <li>\r\n                  {i.title}{\" \"}\r\n                  <Button>\r\n                    <DeleteOutline onClick={() => deleteSnack(i)} />\r\n                  </Button>\r\n                  <Button\r\n                    /*    className={classes.button} */\r\n                    onClick={() => history.push(`/edit/snack/${i.id}`)}\r\n                  >\r\n                    {\" \"}\r\n                    Muokkaa <EditOutlinedIcon />\r\n                  </Button>\r\n                </li>\r\n              ))}\r\n            </div>\r\n            <div>\r\n              {dinner.map((i) => (\r\n                <li>\r\n                  {i.title}{\" \"}\r\n                  <Button>\r\n                    <DeleteOutline onClick={() => deleteDinner(i)} />\r\n                  </Button>\r\n                  <Button\r\n                    /*    className={classes.button} */\r\n                    onClick={() => history.push(`/edit/dinner/${i.id}`)}\r\n                  >\r\n                    {\" \"}\r\n                    Muokkaa <EditOutlinedIcon />\r\n                  </Button>\r\n                </li>\r\n              ))}{\" \"}\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemoveRecipe;\r\n",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":6,"column":3,"nodeType":"184","messageId":"185","endLine":6,"endColumn":7},{"ruleId":"182","severity":1,"message":"186","line":10,"column":10,"nodeType":"184","messageId":"185","endLine":10,"endColumn":27},{"ruleId":"182","severity":1,"message":"187","line":10,"column":29,"nodeType":"184","messageId":"185","endLine":10,"endColumn":43},{"ruleId":"182","severity":1,"message":"188","line":19,"column":8,"nodeType":"184","messageId":"185","endLine":19,"endColumn":17},{"ruleId":"182","severity":1,"message":"189","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":13},{"ruleId":"182","severity":1,"message":"190","line":24,"column":8,"nodeType":"184","messageId":"185","endLine":24,"endColumn":18},{"ruleId":"182","severity":1,"message":"191","line":10,"column":25,"nodeType":"184","messageId":"185","endLine":10,"endColumn":45},{"ruleId":"182","severity":1,"message":"192","line":9,"column":25,"nodeType":"184","messageId":"185","endLine":9,"endColumn":44},{"ruleId":"193","severity":1,"message":"194","line":30,"column":6,"nodeType":"195","endLine":30,"endColumn":17,"suggestions":"196"},{"ruleId":"182","severity":1,"message":"183","line":3,"column":3,"nodeType":"184","messageId":"185","endLine":3,"endColumn":7},{"ruleId":"182","severity":1,"message":"197","line":11,"column":26,"nodeType":"184","messageId":"185","endLine":11,"endColumn":46},{"ruleId":"182","severity":1,"message":"198","line":2,"column":17,"nodeType":"184","messageId":"185","endLine":2,"endColumn":27},{"ruleId":"182","severity":1,"message":"199","line":11,"column":29,"nodeType":"184","messageId":"185","endLine":11,"endColumn":52},{"ruleId":"193","severity":1,"message":"200","line":43,"column":6,"nodeType":"195","endLine":43,"endColumn":8,"suggestions":"201"},{"ruleId":"182","severity":1,"message":"202","line":7,"column":3,"nodeType":"184","messageId":"185","endLine":7,"endColumn":7},{"ruleId":"182","severity":1,"message":"203","line":8,"column":3,"nodeType":"184","messageId":"185","endLine":8,"endColumn":9},{"ruleId":"182","severity":1,"message":"204","line":11,"column":3,"nodeType":"184","messageId":"185","endLine":11,"endColumn":14},{"ruleId":"182","severity":1,"message":"205","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"206","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":14},{"ruleId":"182","severity":1,"message":"189","line":12,"column":8,"nodeType":"184","messageId":"185","endLine":12,"endColumn":13},{"ruleId":"182","severity":1,"message":"190","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":18},{"ruleId":"182","severity":1,"message":"207","line":18,"column":10,"nodeType":"184","messageId":"185","endLine":18,"endColumn":25},{"ruleId":"182","severity":1,"message":"208","line":18,"column":27,"nodeType":"184","messageId":"185","endLine":18,"endColumn":45},{"ruleId":"182","severity":1,"message":"209","line":19,"column":10,"nodeType":"184","messageId":"185","endLine":19,"endColumn":21},{"ruleId":"182","severity":1,"message":"210","line":19,"column":23,"nodeType":"184","messageId":"185","endLine":19,"endColumn":37},{"ruleId":"193","severity":1,"message":"200","line":57,"column":6,"nodeType":"195","endLine":57,"endColumn":8,"suggestions":"211"},{"ruleId":"182","severity":1,"message":"203","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":9},{"ruleId":"182","severity":1,"message":"183","line":10,"column":10,"nodeType":"184","messageId":"185","endLine":10,"endColumn":14},{"ruleId":"182","severity":1,"message":"212","line":30,"column":9,"nodeType":"184","messageId":"185","endLine":30,"endColumn":16},{"ruleId":"182","severity":1,"message":"213","line":31,"column":9,"nodeType":"184","messageId":"185","endLine":31,"endColumn":16},{"ruleId":"182","severity":1,"message":"205","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"214","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"215","line":3,"column":15,"nodeType":"184","messageId":"185","endLine":3,"endColumn":22},{"ruleId":"182","severity":1,"message":"216","line":16,"column":10,"nodeType":"184","messageId":"185","endLine":16,"endColumn":19},{"ruleId":"182","severity":1,"message":"217","line":16,"column":21,"nodeType":"184","messageId":"185","endLine":16,"endColumn":33},{"ruleId":"182","severity":1,"message":"205","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"218","line":5,"column":3,"nodeType":"184","messageId":"185","endLine":5,"endColumn":11},{"ruleId":"182","severity":1,"message":"214","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"199","line":10,"column":22,"nodeType":"184","messageId":"185","endLine":10,"endColumn":45},{"ruleId":"182","severity":1,"message":"197","line":11,"column":19,"nodeType":"184","messageId":"185","endLine":11,"endColumn":39},{"ruleId":"182","severity":1,"message":"192","line":12,"column":18,"nodeType":"184","messageId":"185","endLine":12,"endColumn":37},{"ruleId":"182","severity":1,"message":"219","line":13,"column":18,"nodeType":"184","messageId":"185","endLine":13,"endColumn":37},{"ruleId":"182","severity":1,"message":"220","line":15,"column":8,"nodeType":"184","messageId":"185","endLine":15,"endColumn":21},{"ruleId":"182","severity":1,"message":"203","line":16,"column":10,"nodeType":"184","messageId":"185","endLine":16,"endColumn":16},{"ruleId":"182","severity":1,"message":"221","line":24,"column":20,"nodeType":"184","messageId":"185","endLine":24,"endColumn":31},{"ruleId":"182","severity":1,"message":"214","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"205","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"222","line":4,"column":3,"nodeType":"184","messageId":"185","endLine":4,"endColumn":12},{"ruleId":"182","severity":1,"message":"223","line":14,"column":3,"nodeType":"184","messageId":"185","endLine":14,"endColumn":17},{"ruleId":"182","severity":1,"message":"224","line":15,"column":3,"nodeType":"184","messageId":"185","endLine":15,"endColumn":14},{"ruleId":"182","severity":1,"message":"225","line":16,"column":3,"nodeType":"184","messageId":"185","endLine":16,"endColumn":13},{"ruleId":"182","severity":1,"message":"226","line":17,"column":3,"nodeType":"184","messageId":"185","endLine":17,"endColumn":13},{"ruleId":"182","severity":1,"message":"215","line":19,"column":15,"nodeType":"184","messageId":"185","endLine":19,"endColumn":22},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'withAuthenticator' is defined but never used.","'AmplifySignOut' is defined but never used.","'AddRecipe' is defined but never used.","'Login' is defined but never used.","'AllRecipes' is defined but never used.","'deleteSnacksMutation' is defined but never used.","'deleteLunchMutation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchLunches'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'deleteDinnerMutation' is defined but never used.","'deepPurple' is defined but never used.","'deleteBreakfastMutation' is defined but never used.","React Hook useEffect has missing dependencies: 'category', 'fetchBreakfast', 'fetchDinner', 'fetchLunch', and 'fetchSnack'. Either include them or remove the dependency array.",["230"],"'Grid' is defined but never used.","'Button' is defined but never used.","'CardContent' is defined but never used.","'useEffect' is defined but never used.","'Auth' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setIsAuthenticated' is assigned a value but never used.","'credentials' is assigned a value but never used.","'setCredentials' is assigned a value but never used.",["231"],"'classes' is assigned a value but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'Storage' is defined but never used.","'breakfast' is assigned a value but never used.","'setBreakfast' is assigned a value but never used.","'Redirect' is defined but never used.","'deleteSnackMutation' is defined but never used.","'DeleteOutline' is defined but never used.","'setCategory' is assigned a value but never used.","'useParams' is defined but never used.","'listBreakfasts' is defined but never used.","'listDinners' is defined but never used.","'listLunchs' is defined but never used.","'listSnacks' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"234","fix":"236"},"Update the dependencies array to be: [fetchLunches, nextToken]",{"range":"237","text":"238"},"Update the dependencies array to be: [category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",{"range":"239","text":"240"},{"range":"241","text":"240"},[871,882],"[fetchLunches, nextToken]",[1148,1150],"[category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",[1788,1790]]