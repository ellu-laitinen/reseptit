[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddBreakfast.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddDinner.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddLunch.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddSnack.js":"17"},{"size":277,"mtime":1617650206621,"results":"18","hashOfConfig":"19"},{"size":846,"mtime":1617812818382,"results":"20","hashOfConfig":"19"},{"size":1112,"mtime":1617812875043,"results":"21","hashOfConfig":"19"},{"size":2422,"mtime":1617811928705,"results":"22","hashOfConfig":"19"},{"size":2562,"mtime":1617812215184,"results":"23","hashOfConfig":"19"},{"size":2031,"mtime":1617812360293,"results":"24","hashOfConfig":"19"},{"size":2552,"mtime":1617809572466,"results":"25","hashOfConfig":"19"},{"size":856,"mtime":1617517216772,"results":"26","hashOfConfig":"19"},{"size":2003,"mtime":1617812226719,"results":"27","hashOfConfig":"19"},{"size":2100,"mtime":1617812159392,"results":"28","hashOfConfig":"19"},{"size":478,"mtime":1617722609135,"results":"29","hashOfConfig":"19"},{"size":3793,"mtime":1617722606619,"results":"30","hashOfConfig":"19"},{"size":2369,"mtime":1617722606490,"results":"31","hashOfConfig":"19"},{"size":4515,"mtime":1617724955501,"results":"32","hashOfConfig":"19"},{"size":3168,"mtime":1617724913303,"results":"33","hashOfConfig":"19"},{"size":3097,"mtime":1617810208755,"results":"34","hashOfConfig":"19"},{"size":3060,"mtime":1617808119486,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15ilex8",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["73","74"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["75","76","77"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",["78"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js",["79","80","81","82"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["83","84"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["85","86","87"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js",["88","89","90"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["91"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["92","93","94"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddBreakfast.js",["95","96"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { listBreakfasts } from \"../graphql/queries\";\r\nimport { createBreakfast as createBreakfastMutation } from \"../graphql/mutations\";\r\n\r\nconst AddBreakfast = () => {\r\n  // const [ingredients, setIngredients] = useState([]);\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [breakfasts, setBreakfasts] = useState([]);\r\n  const [breakfastData, setBreakfastData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchBreakfasts();\r\n  }, []);\r\n\r\n  // BREAKFAST\r\n  async function fetchBreakfasts() {\r\n    const apiData = await API.graphql({ query: listBreakfasts });\r\n    setBreakfasts(apiData.data.listBreakfasts.items);\r\n  }\r\n\r\n  async function createBreakfast() {\r\n    if (\r\n      !breakfastData.title ||\r\n      !breakfastData.ingredients ||\r\n      !breakfastData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createBreakfastMutation,\r\n      variables: { input: breakfastData },\r\n    });\r\n    setBreakfasts([...breakfasts, breakfastData]);\r\n    setBreakfastData(initialState);\r\n  }\r\n\r\n  /*  const saveData = ({ name, value }) => {\r\n    setNewRecipe({\r\n      ...newRecipe,\r\n      [name]: value,\r\n    });\r\n  }; */\r\n\r\n  /*   const changeIngHandler = (e) => {\r\n    setIngredients({\r\n      ...ingredients,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }; */\r\n\r\n  /*   const addIng = (e) => {\r\n    e.preventDefault();\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newRecipe.ingredients, ingredients],\r\n    });\r\n    console.log(ingredients);\r\n  };\r\n  console.log(newRecipe);\r\n  console.log(ingredients); */\r\n  /* \r\n  const changeHandler = (e) => {\r\n    setNewRecipe({\r\n      ...newRecipe,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }; */\r\n\r\n  /*   const addRecipe = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"new recipe added\");\r\n    console.log(newRecipe);\r\n    axios\r\n      .post(`http://localhost:3001/breakfast`, newRecipe)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      });\r\n  };\r\n */\r\n  /*   const removeIng = (ingredients) => {\r\n    console.log(ingredients);\r\n    const newIngList = newRecipe.ingredients.filter(\r\n      (x) => x.ingredients !== ingredients\r\n    );\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngList],\r\n    });\r\n  }; */\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={breakfastData.title}\r\n            onChange={(e) =>\r\n              setBreakfastData({ ...breakfastData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={breakfastData.ingredients}\r\n            onChange={(e) =>\r\n              setBreakfastData({\r\n                ...breakfastData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={breakfastData.instructions}\r\n            onChange={(e) =>\r\n              setBreakfastData({\r\n                ...breakfastData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createBreakfast}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddBreakfast;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddDinner.js",["97","98","99","100"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listDinners } from \"../graphql/queries\";\r\nimport {\r\n  createDinner as createDinnerMutation,\r\n  deleteDinner as deleteDinnerMutation,\r\n} from \"../graphql/mutations\";\r\n\r\nconst AddDinner = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [dinners, setDinners] = useState([]);\r\n  const [dinnerData, setDinnerData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchDinners();\r\n  }, []);\r\n\r\n  // DINNER\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({ query: listDinners });\r\n    setDinners(apiData.data.listDinners.items);\r\n  }\r\n\r\n  async function createDinner() {\r\n    if (\r\n      !dinnerData.title ||\r\n      !dinnerData.ingredients ||\r\n      !dinnerData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createDinnerMutation,\r\n      variables: { input: dinnerData },\r\n    });\r\n    setDinners([...dinners, dinnerData]);\r\n    setDinnerData(initialState);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={dinnerData.title}\r\n            onChange={(e) =>\r\n              setDinnerData({ ...dinnerData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={dinnerData.ingredients}\r\n            onChange={(e) =>\r\n              setDinnerData({\r\n                ...dinnerData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={dinnerData.instructions}\r\n            onChange={(e) =>\r\n              setDinnerData({\r\n                ...dinnerData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createDinner}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddDinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddLunch.js",["101","102","103","104"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddSnack.js",["105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":2,"column":50,"nodeType":"114","messageId":"115","endLine":2,"endColumn":54},{"ruleId":"112","severity":1,"message":"116","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":20},{"ruleId":"112","severity":1,"message":"117","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":15},{"ruleId":"112","severity":1,"message":"118","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":4,"column":3,"nodeType":"114","messageId":"115","endLine":4,"endColumn":7},{"ruleId":"112","severity":1,"message":"119","line":13,"column":29,"nodeType":"114","messageId":"115","endLine":13,"endColumn":52},{"ruleId":"112","severity":1,"message":"120","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":13},{"ruleId":"121","severity":1,"message":"122","line":34,"column":6,"nodeType":"123","endLine":34,"endColumn":8,"suggestions":"124"},{"ruleId":"112","severity":1,"message":"113","line":4,"column":3,"nodeType":"114","messageId":"115","endLine":4,"endColumn":7},{"ruleId":"112","severity":1,"message":"120","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":4,"column":3,"nodeType":"114","messageId":"115","endLine":4,"endColumn":7},{"ruleId":"112","severity":1,"message":"120","line":13,"column":8,"nodeType":"114","messageId":"115","endLine":13,"endColumn":13},{"ruleId":"112","severity":1,"message":"125","line":14,"column":10,"nodeType":"114","messageId":"115","endLine":14,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":13},{"ruleId":"112","severity":1,"message":"126","line":3,"column":21,"nodeType":"114","messageId":"115","endLine":3,"endColumn":34},{"ruleId":"121","severity":1,"message":"127","line":29,"column":6,"nodeType":"123","endLine":29,"endColumn":8,"suggestions":"128"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":3,"nodeType":"114","messageId":"115","endLine":3,"endColumn":7},{"ruleId":"112","severity":1,"message":"113","line":3,"column":3,"nodeType":"114","messageId":"115","endLine":3,"endColumn":7},{"ruleId":"112","severity":1,"message":"129","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":17},{"ruleId":"112","severity":1,"message":"120","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":13},{"ruleId":"112","severity":1,"message":"120","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"130","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":13},{"ruleId":"112","severity":1,"message":"120","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"130","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":13},{"ruleId":"112","severity":1,"message":"131","line":12,"column":3,"nodeType":"114","messageId":"115","endLine":12,"endColumn":10},{"ruleId":"112","severity":1,"message":"132","line":17,"column":19,"nodeType":"114","messageId":"115","endLine":17,"endColumn":39},{"ruleId":"112","severity":1,"message":"120","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"130","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":13},{"ruleId":"112","severity":1,"message":"131","line":12,"column":3,"nodeType":"114","messageId":"115","endLine":12,"endColumn":10},{"ruleId":"112","severity":1,"message":"133","line":17,"column":18,"nodeType":"114","messageId":"115","endLine":17,"endColumn":36},{"ruleId":"112","severity":1,"message":"120","line":1,"column":8,"nodeType":"114","messageId":"115","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"130","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":13},{"ruleId":"112","severity":1,"message":"131","line":12,"column":3,"nodeType":"114","messageId":"115","endLine":12,"endColumn":10},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'AddBreakfast' is defined but never used.","'Recipes' is defined but never used.","'Button' is defined but never used.","'deleteBreakfastMutation' is defined but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'category'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'Card' is defined but never used.","'useRouteMatch' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchBreakfast', 'fetchDinner', 'fetchLunch', 'fetchSnack', and 'recipe'. Either include them or remove the dependency array.",["137"],"'AddRecipe' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'deleteDinnerMutation' is defined but never used.","'deleteLunchutation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [category]",{"range":"142","text":"143"},"Update the dependencies array to be: [fetchBreakfast, fetchDinner, fetchLunch, fetchSnack, recipe]",{"range":"144","text":"145"},[905,907],"[category]",[724,726],"[fetchBreakfast, fetchDinner, fetchLunch, fetchSnack, recipe]"]