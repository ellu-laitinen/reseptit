[{"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\index.js":"1","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\App.js":"2","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Theme\\theme.js":"3","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\NavBar\\NavBar.js":"4","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"5","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"6","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"7","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"8","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\FullRecipe.js":"9","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\RecipeCard.js":"10","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\AddRecipe.js":"11","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\mutations.js":"12","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\queries.js":"13","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\aws-exports.js":"14"},{"size":277,"mtime":1618291138818,"results":"15","hashOfConfig":"16"},{"size":1126,"mtime":1618291138818,"results":"17","hashOfConfig":"16"},{"size":833,"mtime":1618291138818,"results":"18","hashOfConfig":"16"},{"size":2324,"mtime":1618291138818,"results":"19","hashOfConfig":"16"},{"size":4694,"mtime":1618316467623,"results":"20","hashOfConfig":"16"},{"size":3357,"mtime":1618317272167,"results":"21","hashOfConfig":"16"},{"size":3364,"mtime":1618317234335,"results":"22","hashOfConfig":"16"},{"size":3437,"mtime":1618316739593,"results":"23","hashOfConfig":"16"},{"size":4205,"mtime":1618291138818,"results":"24","hashOfConfig":"16"},{"size":1445,"mtime":1618291138818,"results":"25","hashOfConfig":"16"},{"size":3931,"mtime":1618291138818,"results":"26","hashOfConfig":"16"},{"size":4132,"mtime":1618291138818,"results":"27","hashOfConfig":"16"},{"size":2608,"mtime":1618291138818,"results":"28","hashOfConfig":"16"},{"size":852,"mtime":1618295553092,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"x7nvjp",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\index.js",[],["62","63"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\App.js",["64"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { withAuthenticator } from \"@aws-amplify/ui-react\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport Breakfasts from \"./Recipes/Breakfasts/Breakfasts\";\r\nimport Snacks from \"./Recipes/Snacks/Snacks\";\r\nimport Lunch from \"./Recipes/Lunch/Lunch\";\r\nimport Dinner from \"./Recipes/Dinner/Dinner\";\r\n\r\nimport theme from \"./Theme/theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/breakfast\" />\r\n          </Route>\r\n          <Route path=\"/breakfast\" exact component={Breakfasts}></Route>\r\n          <Route path=\"/snacks\" exact component={Snacks}></Route>\r\n          <Route path=\"/lunch\" exact component={Lunch}></Route>\r\n          <Route path=\"/dinner\" exact component={Dinner}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withAuthenticator(App);\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Theme\\theme.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\NavBar\\NavBar.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["65","66"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["67"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["68"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["69"],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\FullRecipe.js",["70","71"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { Card, Grid, Typography } from \"@material-ui/core\";\r\n\r\nimport * as queries from \"../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\n\r\nconst FullRecipe = () => {\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n\r\n  // useParams checks the parameters of the URL that match,\r\n  // e.g.  /:category/:postId\r\n  let { postId, category } = useParams();\r\n\r\n  console.log(category);\r\n  console.log(postId);\r\n\r\n  // try switch case??\r\n  useEffect(() => {\r\n    if (category === \"breakfast\") {\r\n      console.log(category);\r\n      fetchBreakfast();\r\n    }\r\n    if (category === \"dinner\") {\r\n      fetchDinner();\r\n    }\r\n    if (category === \"lunch\") {\r\n      fetchLunch();\r\n    }\r\n    if (category === \"snacks\") {\r\n      fetchSnack();\r\n    }\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(recipeFromAPI);\r\n    console.log(recipeFromAPI);\r\n  }\r\n\r\n  async function fetchDinner() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getDinner,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getDinner;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getDinner);\r\n    console.log(apiData.data.getDinner);\r\n  }\r\n\r\n  async function fetchLunch() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getLunch,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getLunch;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getLunch);\r\n    console.log(apiData.data.getLunch);\r\n  }\r\n\r\n  async function fetchSnack() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getSnack,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getSnack;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(apiData.data.getSnack);\r\n    console.log(apiData.data.getSnack);\r\n  }\r\n\r\n  /*   useEffect(() => {\r\n    if (!loadedRecipe) {\r\n      axios\r\n        .get(\"http://localhost:3001/\" + recipe + \"/\" + postId)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setLoadedRecipe(response.data);\r\n        });\r\n    }\r\n  }); */\r\n\r\n  console.log(loadedRecipe);\r\n  return (\r\n    <Card>\r\n      <Grid container direction=\"column\" spacing={4}>\r\n        <Grid item>\r\n          <Typography variant=\"h4\">{loadedRecipe.title}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <img\r\n            src={loadedRecipe.image}\r\n            alt={loadedRecipe.title}\r\n            style={{ width: 400 }}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          {/*   {loadedRecipe.ingredients.map((ing) => (\r\n          <ul>\r\n            <li>{ing.ingredients}</li>\r\n          </ul>\r\n        ))} */}\r\n          <Typography>Ainesosat:</Typography>\r\n          <Typography>{loadedRecipe.ingredients}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography>Ohje:</Typography>\r\n          <Typography>{loadedRecipe.instructions}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FullRecipe;\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\Recipes\\AddRecipe.js",["72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    color: \"black\",\r\n    backgroundColor: \"lightgrey\",\r\n  },\r\n});\r\nconst AddRecipe = ({ recipeData, setRecipeData, createRecipe, category }) => {\r\n  const classes = useStyles();\r\n  /*   useEffect(() => {\r\n    fetchRecipes();\r\n    console.log(\"fetch1\");\r\n  }, []); */\r\n\r\n  async function onChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    const file = e.target.files[0];\r\n    setRecipeData({ ...recipeData, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    /*     fetchRecipes(); */\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setRecipeData({\r\n      ...recipeData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  /*   async function fetchRecipes() {\r\n    const apiData = await API.graphql({ query: [listRecipes] });\r\n    const recipeFromAPI = apiData.data[listRecipes].items;\r\n    console.log(recipeFromAPI);\r\n    await Promise.all(\r\n      recipeFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n        }\r\n        return recipe;\r\n      })\r\n    );\r\n    setRecipe(apiData.data.listRecipes.items);\r\n  } */\r\n  /* \r\n  async function createRecipe() {\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createRecipeMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n    }\r\n    setRecipe([...recipe, recipeData]);\r\n  } */\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h6\">Lisää {category}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={recipeData.title}\r\n            onChange={recipeHandler}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={recipeData.ingredients}\r\n            onChange={recipeHandler}\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n        <div>\r\n          <li value={i.ingredients}>{i.ingredients}</li>\r\n          <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n        </div>\r\n      ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            style={{ width: 300 }}\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={recipeData.instructions}\r\n            onChange={recipeHandler}\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Lisää kuva:</InputLabel>\r\n\r\n          <input type=\"file\" onChange={onChange} />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            onClick={createRecipe}\r\n            variant=\"outlined\"\r\n            className={classes.button}\r\n          >\r\n            Lisää resepti\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddRecipe;\r\n","C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\elisabet\\Desktop\\reseptit\\src\\aws-exports.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":6,"column":3,"nodeType":"81","messageId":"82","endLine":6,"endColumn":7},{"ruleId":"79","severity":1,"message":"83","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":4,"column":3,"nodeType":"81","messageId":"82","endLine":4,"endColumn":7},{"ruleId":"79","severity":1,"message":"80","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":7},{"ruleId":"79","severity":1,"message":"80","line":4,"column":3,"nodeType":"81","messageId":"82","endLine":4,"endColumn":7},{"ruleId":"79","severity":1,"message":"80","line":3,"column":3,"nodeType":"81","messageId":"82","endLine":3,"endColumn":7},{"ruleId":"79","severity":1,"message":"84","line":2,"column":21,"nodeType":"81","messageId":"82","endLine":2,"endColumn":34},{"ruleId":"85","severity":1,"message":"86","line":33,"column":6,"nodeType":"87","endLine":33,"endColumn":8,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"90","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"91","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":13},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'category', 'fetchBreakfast', 'fetchDinner', 'fetchLunch', and 'fetchSnack'. Either include them or remove the dependency array.","ArrayExpression",["94"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]",{"range":"97","text":"98"},[884,886],"[category, fetchBreakfast, fetchDinner, fetchLunch, fetchSnack]"]