[{"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js":"1","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js":"2","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js":"3","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js":"4","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js":"5","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js":"6","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js":"7","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js":"8","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js":"9","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js":"10","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js":"11","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js":"12","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js":"13","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddBreakfast.js":"14","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddDinner.js":"15","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddLunch.js":"16","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddSnack.js":"17","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js":"18","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddRecipe.js":"19"},{"size":277,"mtime":1617650206621,"results":"20","hashOfConfig":"21"},{"size":1126,"mtime":1618069039580,"results":"22","hashOfConfig":"21"},{"size":1919,"mtime":1618045594491,"results":"23","hashOfConfig":"21"},{"size":0,"mtime":1618068953854,"results":"24","hashOfConfig":"21"},{"size":4093,"mtime":1618130531133,"results":"25","hashOfConfig":"21"},{"size":2031,"mtime":1617812360293,"results":"26","hashOfConfig":"21"},{"size":2894,"mtime":1618130232034,"results":"27","hashOfConfig":"21"},{"size":879,"mtime":1618045903416,"results":"28","hashOfConfig":"21"},{"size":2003,"mtime":1617812226719,"results":"29","hashOfConfig":"21"},{"size":2100,"mtime":1617812159392,"results":"30","hashOfConfig":"21"},{"size":852,"mtime":1618044991835,"results":"31","hashOfConfig":"21"},{"size":3937,"mtime":1618044987555,"results":"32","hashOfConfig":"21"},{"size":2473,"mtime":1618044987415,"results":"33","hashOfConfig":"21"},{"size":5069,"mtime":1618128061861,"results":"34","hashOfConfig":"21"},{"size":3152,"mtime":1618129668094,"results":"35","hashOfConfig":"21"},{"size":3097,"mtime":1617810208755,"results":"36","hashOfConfig":"21"},{"size":3060,"mtime":1617808119486,"results":"37","hashOfConfig":"21"},{"size":689,"mtime":1618045924929,"results":"38","hashOfConfig":"21"},{"size":3443,"mtime":1618129003921,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"15ilex8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"42"},"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\index.js",[],["92","93"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\App.js",["94"],"import \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { withAuthenticator } from \"@aws-amplify/ui-react\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nimport NavBar from \"./NavBar/NavBar\";\r\nimport Breakfasts from \"./Recipes/Breakfasts/Breakfasts\";\r\nimport Snacks from \"./Recipes/Snacks/Snacks\";\r\nimport Lunch from \"./Recipes/Lunch/Lunch\";\r\nimport Dinner from \"./Recipes/Dinner/Dinner\";\r\n\r\nimport theme from \"./Theme/theme\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/breakfast\" />\r\n          </Route>\r\n          <Route path=\"/breakfast\" exact component={Breakfasts}></Route>\r\n          <Route path=\"/snacks\" exact component={Snacks}></Route>\r\n          <Route path=\"/lunch\" exact component={Lunch}></Route>\r\n          <Route path=\"/dinner\" exact component={Dinner}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default withAuthenticator(App);\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\NavBar\\NavBar.js",["95"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\";\r\n\r\nimport \"./NavBar.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  link: {\r\n    color: \"purple\",\r\n    textDecoration: \"none\",\r\n    textTransform: \"uppercase\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  title: {\r\n    color: \"purple\",\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div /* className={classes.root} */>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"toolbar\">\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Link to=\"/\" className={classes.link}>\r\n              Ellun reseptipankki\r\n            </Link>\r\n          </Typography>\r\n          <Grid container spacing={2} justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/breakfast\" className={classes.link}>\r\n                Aamupalat\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/snacks\" className={classes.link}>\r\n                Väli- ja iltapalat\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/lunch\" className={classes.link}>\r\n                Lounaat\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/dinner\" className={classes.link}>\r\n                Päiväruuat\r\n              </Link>\r\n            </Grid>\r\n            <AmplifySignOut />\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Recipes.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Breakfasts\\Breakfasts.js",["96","97","98","99"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  useParams,\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport { listBreakfasts } from \"../../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  deleteBreakfast as deleteBreakfastMutation,\r\n  createBreakfast as createBreakfastMutation,\r\n} from \"../../graphql/mutations\";\r\n\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddBreakfast from \"../../AddRecipe/AddBreakfast\";\r\nimport AddRecipe from \"../../AddRecipe/AddRecipe\";\r\n\r\nconst Breakfasts = () => {\r\n  const [breakfast, setBreakfast] = useState([]);\r\n  let match = useRouteMatch();\r\n  /* let { recipe } = useParams(); */\r\n\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [breakfastData, setBreakfastData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchBreakfasts();\r\n  }, []);\r\n\r\n  // get all recipes\r\n  async function fetchBreakfasts() {\r\n    const apiData = await API.graphql({ query: listBreakfasts });\r\n    const breakfastFromAPI = apiData.data.listBreakfasts.items;\r\n    await Promise.all(\r\n      breakfastFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n          //      console.log(recipe.image);\r\n        }\r\n      })\r\n    );\r\n    setBreakfast(breakfastFromAPI);\r\n    //  console.log(breakfastFromAPI);\r\n  }\r\n\r\n  // delete a recipe\r\n  async function deleteBreakfast({ id }) {\r\n    const newBreakfastArray = breakfast.filter((recipe) => recipe.id !== id);\r\n    setBreakfast(newBreakfastArray);\r\n    await API.graphql({\r\n      query: deleteBreakfastMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  // create a new recipe\r\n  async function createBreakfast() {\r\n    if (\r\n      !breakfastData.title ||\r\n      !breakfastData.ingredients ||\r\n      !breakfastData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createBreakfastMutation,\r\n      variables: { input: breakfastData },\r\n    });\r\n    if (breakfastData.image) {\r\n      const image = await Storage.get(breakfastData.image);\r\n      breakfastData.image = image;\r\n    }\r\n    setBreakfast([...breakfast, breakfastData]);\r\n    fetchBreakfasts();\r\n    setBreakfastData(initialState);\r\n  }\r\n\r\n  /*   useEffect(() => {\r\n    axios.get(\"http://localhost:3001/breakfast\").then((response) => {\r\n      setBreakfast(response.data);\r\n      console.log(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const removeHandler = (id) => {\r\n    console.log(id);\r\n\r\n    axios\r\n      .delete(\"http://localhost:3001/breakfast/\" + id)\r\n      .then(() => {\r\n        return axios.get(\"http://localhost:3001/breakfast\");\r\n      })\r\n      .then((response) => {\r\n        setBreakfast(response.data);\r\n      });\r\n  }; */\r\n  // console.log(breakfast[0]);\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {breakfast.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.image}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteBreakfast(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddRecipe\r\n                  recipeData={breakfastData}\r\n                  setRecipeData={setBreakfastData}\r\n                  createRecipe={createBreakfast}\r\n                  category={\"aamupala\"}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breakfasts;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Snacks\\Snacks.js",["100","101","102"],"import React, { useEffect, useState } from \"react\";\r\nimport RecipeCard from \"../RecipeCard\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listSnacks } from \"../../graphql/queries\";\r\nimport { deleteSnack as deleteSnacksMutation } from \"../../graphql/mutations\";\r\nimport { API } from \"aws-amplify\";\r\nimport axios from \"axios\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\n\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport AddSnack from \"../../AddRecipe/AddSnack\";\r\n\r\nconst Snacks = () => {\r\n  const [snacks, setSnacks] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchSnacks();\r\n  }, []);\r\n\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({ query: listSnacks });\r\n    setSnacks(apiData.data.listSnacks.items);\r\n    console.log(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function deleteSnack({ id }) {\r\n    const newSnackArray = snacks.filter((recipe) => recipe.id !== id);\r\n    setSnacks(newSnackArray);\r\n    await API.graphql({\r\n      query: deleteSnacksMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`/:recipe/:postId`}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {snacks.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.img}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteSnack(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddSnack />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snacks;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\FullRecipe.js",["103","104","105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nimport * as queries from \"../graphql/queries\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport RecipeCard from \"./RecipeCard\";\r\n\r\nconst FullRecipe = () => {\r\n  const [loadedRecipe, setLoadedRecipe] = useState(\"\");\r\n  let { postId } = useParams();\r\n  let { recipe } = useParams();\r\n\r\n  console.log(recipe);\r\n  console.log(postId);\r\n\r\n  useEffect(() => {\r\n    if (recipe === \"breakfast\") {\r\n      console.log(recipe);\r\n      fetchBreakfast();\r\n    }\r\n    if (recipe === \"dinner\") {\r\n      fetchDinner();\r\n    }\r\n    if (recipe === \"lunch\") {\r\n      fetchLunch();\r\n    }\r\n    if (recipe === \"snacks\") {\r\n      fetchSnack();\r\n    }\r\n  }, []);\r\n\r\n  async function fetchBreakfast() {\r\n    console.log(\"fetching breakfasts\");\r\n    const apiData = await API.graphql({\r\n      query: queries.getBreakfast,\r\n      variables: { id: postId },\r\n    });\r\n    console.log(apiData);\r\n    const recipeFromAPI = apiData.data.getBreakfast;\r\n    console.log(recipeFromAPI);\r\n    if (recipeFromAPI.image) {\r\n      console.log(recipeFromAPI);\r\n      const image = await Storage.get(recipeFromAPI.image);\r\n      recipeFromAPI.image = image;\r\n    }\r\n    setLoadedRecipe(recipeFromAPI);\r\n    console.log(recipeFromAPI);\r\n  }\r\n\r\n  async function fetchDinner() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getDinner,\r\n      variables: { id: postId },\r\n    });\r\n    setLoadedRecipe(apiData.data.getDinner);\r\n    console.log(apiData.data.getDinner);\r\n  }\r\n\r\n  async function fetchLunch() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getLunch,\r\n      variables: { id: postId },\r\n    });\r\n    setLoadedRecipe(apiData.data.getLunch);\r\n    console.log(apiData.data.getLunch);\r\n  }\r\n\r\n  async function fetchSnack() {\r\n    const apiData = await API.graphql({\r\n      query: queries.getSnack,\r\n      variables: { id: postId },\r\n    });\r\n    setLoadedRecipe(apiData.data.getSnack);\r\n    console.log(apiData.data.getSnack);\r\n  }\r\n\r\n  /*   useEffect(() => {\r\n    if (!loadedRecipe) {\r\n      axios\r\n        .get(\"http://localhost:3001/\" + recipe + \"/\" + postId)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setLoadedRecipe(response.data);\r\n        });\r\n    }\r\n  }); */\r\n\r\n  console.log(loadedRecipe);\r\n  return (\r\n    <Card>\r\n      <h1>{loadedRecipe.title}</h1>\r\n      {/*   {loadedRecipe.ingredients.map((ing) => (\r\n          <ul>\r\n            <li>{ing.ingredients}</li>\r\n          </ul>\r\n        ))} */}\r\n\r\n      <p>{loadedRecipe.ingredients}</p>\r\n      <p>{loadedRecipe.instructions}</p>\r\n      <img\r\n        src={loadedRecipe.image}\r\n        alt={loadedRecipe.title}\r\n        style={{ width: 400 }}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FullRecipe;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\RecipeCard.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Lunch\\Lunch.js",["107"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listLunchs } from \"../../graphql/queries\";\r\nimport { deleteLunch as deleteLunchMutation } from \"../../graphql/mutations\";\r\nimport { API } from \"aws-amplify\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport FullRecipe from \"../FullRecipe\";\r\n\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport AddLunch from \"../../AddRecipe/AddLunch\";\r\n\r\nconst Lunch = () => {\r\n  const [lunch, setLunch] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({ query: listLunchs });\r\n    setLunch(apiData.data.listLunchs.items);\r\n    console.log(apiData.data.listLunchs.items);\r\n  }\r\n\r\n  async function deleteLunch({ id }) {\r\n    const newBreakfastArray = lunch.filter((recipe) => recipe.id !== id);\r\n    setLunch(newBreakfastArray);\r\n    await API.graphql({\r\n      query: deleteLunchMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {lunch.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.img}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteLunch(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n\r\n              <Grid item xs={12}>\r\n                <AddLunch />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Recipes\\Dinner\\Dinner.js",["108","109","110"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Link,\r\n  useRouteMatch,\r\n  Switch,\r\n  Route,\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport { listDinners } from \"../../graphql/queries\";\r\nimport { API } from \"aws-amplify\";\r\nimport { deleteDinner as deleteDinnerMutation } from \"../../graphql/mutations\";\r\nimport RecipeCard from \"../RecipeCard\";\r\n\r\nimport AddRecipe from \"../../AddRecipe/AddBreakfast\";\r\nimport FullRecipe from \"../FullRecipe\";\r\nimport axios from \"axios\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AddDinner from \"../../AddRecipe/AddDinner\";\r\n\r\nconst Dinner = () => {\r\n  const [dinner, setDinner] = useState([]);\r\n  let match = useRouteMatch();\r\n\r\n  useEffect(() => {\r\n    fetchDinners();\r\n  }, []);\r\n\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({ query: listDinners });\r\n    setDinner(apiData.data.listDinners.items);\r\n    console.log(apiData.data.listDinners.items);\r\n  }\r\n\r\n  async function deleteDinner({ id }) {\r\n    const newBreakfastArray = dinner.filter((recipe) => recipe.id !== id);\r\n    setDinner(newBreakfastArray);\r\n    await API.graphql({\r\n      query: deleteDinnerMutation,\r\n      variables: { input: { id } },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/:recipe/:postId\"}>\r\n            <FullRecipe />\r\n          </Route>\r\n          <Route path={match.path}>\r\n            <Grid container spacing={2}>\r\n              {dinner.map((item) => {\r\n                return (\r\n                  <Grid item xs={12} sm={4}>\r\n                    <RecipeCard\r\n                      title={item.title}\r\n                      img={item.img}\r\n                      link={`${match.url}/${item.id}`}\r\n                      remove={() => deleteDinner(item)}\r\n                    />\r\n                  </Grid>\r\n                );\r\n              })}\r\n              <Grid item xs={12}>\r\n                <AddDinner />\r\n              </Grid>\r\n            </Grid>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\aws-exports.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\mutations.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\graphql\\queries.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddBreakfast.js",["111","112"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { listBreakfasts } from \"../graphql/queries\";\r\nimport { createBreakfast as createBreakfastMutation } from \"../graphql/mutations\";\r\n\r\nconst AddBreakfast = () => {\r\n  // const [ingredients, setIngredients] = useState([]);\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [breakfasts, setBreakfasts] = useState([]);\r\n  const [breakfastData, setBreakfastData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchBreakfasts();\r\n    console.log(\"fetch1\");\r\n  }, []);\r\n\r\n  async function onChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    const file = e.target.files[0];\r\n    setBreakfastData({ ...breakfastData, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    fetchBreakfasts();\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setBreakfastData({\r\n      ...breakfastData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  // BREAKFAST\r\n  async function fetchBreakfasts() {\r\n    const apiData = await API.graphql({ query: listBreakfasts });\r\n    const breakfastFromAPI = apiData.data.listBreakfasts.items;\r\n    await Promise.all(\r\n      breakfastFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n        }\r\n        return recipe;\r\n      })\r\n    );\r\n    setBreakfasts(apiData.data.listBreakfasts.items);\r\n  }\r\n\r\n  async function createBreakfast() {\r\n    if (\r\n      !breakfastData.title ||\r\n      !breakfastData.ingredients ||\r\n      !breakfastData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createBreakfastMutation,\r\n      variables: { input: breakfastData },\r\n    });\r\n    if (breakfastData.image) {\r\n      const image = await Storage.get(breakfastData.image);\r\n      breakfastData.image = image;\r\n    }\r\n    setBreakfasts([...breakfasts, breakfastData]);\r\n    setBreakfastData(initialState);\r\n  }\r\n\r\n  /*  const saveData = ({ name, value }) => {\r\n    setNewRecipe({\r\n      ...newRecipe,\r\n      [name]: value,\r\n    });\r\n  }; */\r\n\r\n  /*   const changeIngHandler = (e) => {\r\n    setIngredients({\r\n      ...ingredients,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }; */\r\n\r\n  /*   const addIng = (e) => {\r\n    e.preventDefault();\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newRecipe.ingredients, ingredients],\r\n    });\r\n    console.log(ingredients);\r\n  };\r\n  console.log(newRecipe);\r\n  console.log(ingredients); */\r\n  /* \r\n  const changeHandler = (e) => {\r\n    setNewRecipe({\r\n      ...newRecipe,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }; */\r\n\r\n  /*   const addRecipe = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"new recipe added\");\r\n    console.log(newRecipe);\r\n    axios\r\n      .post(`http://localhost:3001/breakfast`, newRecipe)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      });\r\n  };\r\n */\r\n  /*   const removeIng = (ingredients) => {\r\n    console.log(ingredients);\r\n    const newIngList = newRecipe.ingredients.filter(\r\n      (x) => x.ingredients !== ingredients\r\n    );\r\n    saveData({\r\n      name: \"ingredients\",\r\n      value: [...newIngList],\r\n    });\r\n  }; */\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={breakfastData.title}\r\n            onChange={recipeHandler}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={breakfastData.ingredients}\r\n            onChange={recipeHandler}\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={breakfastData.instructions}\r\n            onChange={recipeHandler}\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Grid item>\r\n          <input type=\"file\" onChange={onChange} />\r\n        </Grid>\r\n        <Button onClick={createBreakfast}>Lisää resepti</Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddBreakfast;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddDinner.js",["113","114","115"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listDinners } from \"../graphql/queries\";\r\nimport { createDinner as createDinnerMutation } from \"../graphql/mutations\";\r\n\r\nconst AddDinner = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [dinners, setDinners] = useState([]);\r\n  const [dinnerData, setDinnerData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchDinners();\r\n  }, []);\r\n\r\n  // DINNER\r\n  async function fetchDinners() {\r\n    const apiData = await API.graphql({ query: listDinners });\r\n    setDinners(apiData.data.listDinners.items);\r\n  }\r\n\r\n  async function createDinner() {\r\n    if (\r\n      !dinnerData.title ||\r\n      !dinnerData.ingredients ||\r\n      !dinnerData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createDinnerMutation,\r\n      variables: { input: dinnerData },\r\n    });\r\n    setDinners([...dinners, dinnerData]);\r\n    setDinnerData(initialState);\r\n    console.log(dinnerData);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={dinnerData.title}\r\n            onChange={(e) =>\r\n              setDinnerData({ ...dinnerData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={dinnerData.ingredients}\r\n            onChange={(e) =>\r\n              setDinnerData({\r\n                ...dinnerData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={dinnerData.instructions}\r\n            onChange={(e) =>\r\n              setDinnerData({\r\n                ...dinnerData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createDinner}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddDinner;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddLunch.js",["116","117","118","119"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listLunchs } from \"../graphql/queries\";\r\nimport {\r\n  createLunch as createLunchMutation,\r\n  deleteLunch as deleteLunchutation,\r\n} from \"../graphql/mutations\";\r\n\r\nconst AddLunch = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [lunches, setLunches] = useState([]);\r\n  const [lunchData, setLunchData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchLunches();\r\n  }, []);\r\n\r\n  async function fetchLunches() {\r\n    const apiData = await API.graphql({ query: listLunchs });\r\n    setLunches(apiData.data.listLunchs.items);\r\n  }\r\n\r\n  async function createLunch() {\r\n    if (!lunchData.title || !lunchData.ingredients || !lunchData.instructions)\r\n      return;\r\n    await API.graphql({\r\n      query: createLunchMutation,\r\n      variables: { input: lunchData },\r\n    });\r\n    setLunches([...lunches, lunchData]);\r\n    setLunchData(initialState);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={lunchData.title}\r\n            onChange={(e) =>\r\n              setLunchData({ ...lunchData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={lunchData.ingredients}\r\n            onChange={(e) =>\r\n              setLunchData({\r\n                ...lunchData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={lunchData.instructions}\r\n            onChange={(e) =>\r\n              setLunchData({\r\n                ...lunchData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createLunch}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddLunch;\r\n","C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddSnack.js",["120","121","122"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { API } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport { listSnacks } from \"../graphql/queries\";\r\nimport { createSnack as createSnackMutation } from \"../graphql/mutations\";\r\n\r\nconst AddSnack = () => {\r\n  const initialState = {\r\n    title: \"\",\r\n    ingredients: \"\",\r\n    instructions: \"\",\r\n  };\r\n  const [snacks, setSnacks] = useState([]);\r\n  const [snackData, setSnackData] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    fetchSnacks();\r\n  }, []);\r\n\r\n  // DINNER\r\n  async function fetchSnacks() {\r\n    const apiData = await API.graphql({ query: listSnacks });\r\n    setSnacks(apiData.data.listSnacks.items);\r\n  }\r\n\r\n  async function createSnack() {\r\n    if (!snackData.title || !snackData.ingredients || !snackData.instructions)\r\n      return;\r\n    await API.graphql({\r\n      query: createSnackMutation,\r\n      variables: { input: snackData },\r\n    });\r\n    setSnacks([...snacks, snackData]);\r\n    setSnackData(initialState);\r\n  }\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={snackData.title}\r\n            onChange={(e) =>\r\n              setSnackData({ ...snackData, title: e.target.value })\r\n            }\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={snackData.ingredients}\r\n            onChange={(e) =>\r\n              setSnackData({\r\n                ...snackData,\r\n                ingredients: e.target.value,\r\n              })\r\n            }\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n          <div>\r\n            <li value={i.ingredients}>{i.ingredients}</li>\r\n            <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n          </div>\r\n        ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={snackData.instructions}\r\n            onChange={(e) =>\r\n              setSnackData({\r\n                ...snackData,\r\n                instructions: e.target.value,\r\n              })\r\n            }\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Button type=\"submit\" onClick={createSnack}>\r\n          Lisää resepti\r\n        </Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddSnack;\r\n",["123","124"],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\Theme\\theme.js",[],"C:\\Users\\Ellu\\Desktop\\React projects\\reseptit\\src\\AddRecipe\\AddRecipe.js",["125","126","127"],"import React, { useState, useEffect } from \"react\";\r\nimport { API, Storage } from \"aws-amplify\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  InputLabel,\r\n  TextField,\r\n  TextareaAutosize,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst AddRecipe = ({ recipeData, setRecipeData, createRecipe, category }) => {\r\n  /*   useEffect(() => {\r\n    fetchRecipes();\r\n    console.log(\"fetch1\");\r\n  }, []); */\r\n\r\n  async function onChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    const file = e.target.files[0];\r\n    setRecipeData({ ...recipeData, image: file.name });\r\n    await Storage.put(file.name, file);\r\n    /*     fetchRecipes(); */\r\n  }\r\n\r\n  const recipeHandler = (e) => {\r\n    setRecipeData({\r\n      ...recipeData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  /*   async function fetchRecipes() {\r\n    const apiData = await API.graphql({ query: [listRecipes] });\r\n    const recipeFromAPI = apiData.data[listRecipes].items;\r\n    console.log(recipeFromAPI);\r\n    await Promise.all(\r\n      recipeFromAPI.map(async (recipe) => {\r\n        if (recipe.image) {\r\n          const image = await Storage.get(recipe.image);\r\n          recipe.image = image;\r\n        }\r\n        return recipe;\r\n      })\r\n    );\r\n    setRecipe(apiData.data.listRecipes.items);\r\n  } */\r\n  /* \r\n  async function createRecipe() {\r\n    if (\r\n      !recipeData.title ||\r\n      !recipeData.ingredients ||\r\n      !recipeData.instructions\r\n    )\r\n      return;\r\n    await API.graphql({\r\n      query: createRecipeMutation,\r\n      variables: { input: recipeData },\r\n    });\r\n    if (recipeData.image) {\r\n      const image = await Storage.get(recipeData.image);\r\n      recipeData.image = image;\r\n    }\r\n    setRecipe([...recipe, recipeData]);\r\n  } */\r\n\r\n  return (\r\n    <Card style={{ margin: \"2rem\" }}>\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography>Lisää {category}</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Reseptin nimi</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={recipeData.title}\r\n            onChange={recipeHandler}\r\n          ></TextField>\r\n        </Grid>\r\n        <Grid item>\r\n          <InputLabel>Ainesosat</InputLabel>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            type=\"text\"\r\n            name=\"ingredients\"\r\n            value={recipeData.ingredients}\r\n            onChange={recipeHandler}\r\n          ></TextField>\r\n          {/*  <Button onClick={addIng}>Lisää listaan</Button> */}\r\n        </Grid>\r\n        {/*       {newRecipe.ingredients.map((i) => (\r\n        <div>\r\n          <li value={i.ingredients}>{i.ingredients}</li>\r\n          <button onClick={() => removeIng(i.ingredients)}>poista</button>\r\n        </div>\r\n      ))} */}\r\n        <Grid item>\r\n          <InputLabel>Ohjeet</InputLabel>\r\n          <TextareaAutosize\r\n            rowsMin={10}\r\n            type=\"text\"\r\n            name=\"instructions\"\r\n            value={recipeData.instructions}\r\n            onChange={recipeHandler}\r\n          ></TextareaAutosize>\r\n        </Grid>\r\n        <Grid item>\r\n          <input type=\"file\" onChange={onChange} />\r\n        </Grid>\r\n        <Button onClick={createRecipe}>Lisää resepti</Button>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddRecipe;\r\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":6,"column":3,"nodeType":"134","messageId":"135","endLine":6,"endColumn":7},{"ruleId":"132","severity":1,"message":"136","line":7,"column":8,"nodeType":"134","messageId":"135","endLine":7,"endColumn":14},{"ruleId":"132","severity":1,"message":"137","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":4,"column":3,"nodeType":"134","messageId":"135","endLine":4,"endColumn":7},{"ruleId":"132","severity":1,"message":"138","line":19,"column":8,"nodeType":"134","messageId":"135","endLine":19,"endColumn":13},{"ruleId":"132","severity":1,"message":"139","line":21,"column":8,"nodeType":"134","messageId":"135","endLine":21,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":4,"column":3,"nodeType":"134","messageId":"135","endLine":4,"endColumn":7},{"ruleId":"132","severity":1,"message":"138","line":13,"column":8,"nodeType":"134","messageId":"135","endLine":13,"endColumn":13},{"ruleId":"132","severity":1,"message":"140","line":14,"column":10,"nodeType":"134","messageId":"135","endLine":14,"endColumn":14},{"ruleId":"132","severity":1,"message":"138","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":13},{"ruleId":"132","severity":1,"message":"141","line":3,"column":21,"nodeType":"134","messageId":"135","endLine":3,"endColumn":34},{"ruleId":"132","severity":1,"message":"142","line":8,"column":8,"nodeType":"134","messageId":"135","endLine":8,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":32,"column":6,"nodeType":"145","endLine":32,"endColumn":8,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":7},{"ruleId":"132","severity":1,"message":"133","line":3,"column":3,"nodeType":"134","messageId":"135","endLine":3,"endColumn":7},{"ruleId":"132","severity":1,"message":"147","line":14,"column":8,"nodeType":"134","messageId":"135","endLine":14,"endColumn":17},{"ruleId":"132","severity":1,"message":"138","line":16,"column":8,"nodeType":"134","messageId":"135","endLine":16,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"148","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"148","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":13},{"ruleId":"132","severity":1,"message":"149","line":12,"column":3,"nodeType":"134","messageId":"135","endLine":12,"endColumn":10},{"ruleId":"132","severity":1,"message":"138","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"148","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":13},{"ruleId":"132","severity":1,"message":"149","line":12,"column":3,"nodeType":"134","messageId":"135","endLine":12,"endColumn":10},{"ruleId":"132","severity":1,"message":"150","line":17,"column":18,"nodeType":"134","messageId":"135","endLine":17,"endColumn":36},{"ruleId":"132","severity":1,"message":"138","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"148","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":13},{"ruleId":"132","severity":1,"message":"149","line":12,"column":3,"nodeType":"134","messageId":"135","endLine":12,"endColumn":10},{"ruleId":"128","replacedBy":"151"},{"ruleId":"130","replacedBy":"152"},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"154","line":1,"column":27,"nodeType":"134","messageId":"135","endLine":1,"endColumn":36},{"ruleId":"132","severity":1,"message":"155","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":13},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","'AddBreakfast' is defined but never used.","'Card' is defined but never used.","'useRouteMatch' is defined but never used.","'RecipeCard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchBreakfast', 'fetchDinner', 'fetchLunch', 'fetchSnack', and 'recipe'. Either include them or remove the dependency array.","ArrayExpression",["158"],"'AddRecipe' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'deleteLunchutation' is defined but never used.",["156"],["157"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'API' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},"Update the dependencies array to be: [fetchBreakfast, fetchDinner, fetchLunch, fetchSnack, recipe]",{"range":"161","text":"162"},[827,829],"[fetchBreakfast, fetchDinner, fetchLunch, fetchSnack, recipe]"]